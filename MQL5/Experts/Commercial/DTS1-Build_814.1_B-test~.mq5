/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright@2007-2008 by Yohanes R.Gagahlin-ForexHope.com"
#property link      "http://www.eafan.net"


int g_datetime_200;

int gi_244 = 1;

int gi_252;

bool gi_264 = true;
int gi_268 = 48;

int g_count_276 = 0;
int gi_280;
int gi_284 = 3600;

extern int Risk_Setting = 3;
extern double Initial_Capital = 5000.0;
extern int SP_Distance = 50;
extern bool Check_Position_Left = false;
extern bool MiniAccount = false;
extern bool Show_Target_Line = true;
extern bool Use_Keltner_Entry = true;
extern bool Enable_Watermark_Calc = true;
extern int Start_Trading_Day = 0;
extern int End_Trading_Day = 4;
extern int MaxSpread_Allowed = 5;
extern string Setting1 = "---------------Stop Loss Control--------------";
extern int StopLoss_OpenPosNum = 0;
extern int StopLoss_Distance = 0;
extern double StopLoss_Percentage = 0.0;
extern string Setting8 = "---------------Outside Control-------------------";
extern int C_Cycle_Long = 1;
extern int C_Cycle_Short = 1;
extern int B_Cycle_Long = 0;
extern int B_Cycle_Short = 0;
extern int I_Cycle_Long = 0;
extern int I_Cycle_Short = 0;
extern int R_Cycle_Long = 0;
extern int R_Cycle_Short = 0;
extern int S_Cycle_Long = 0;
extern int S_Cycle_Short = 0;
extern int Automatic_MSP_Trend = 1;
extern int Automatic_MSP_Reversal = 1;
extern int Param1 = 0;
extern int Param2 = 0;
extern int Param3 = 0;
extern int Param4 = 0;
extern int Param5 = 0;
extern int Param6 = 0;
extern string Setting9 = "------------% Profits Cycle Control-----------";
extern int Prt_Up_Profit = 0;
extern string Setting2 = "----------------C Cycle Control---------------";
extern bool Enable_C1 = true;
extern bool Enable_C2 = true;
extern bool Enable_C3 = false;
extern bool Enable_C4 = false;
extern bool Enable_C_Buy = true;
extern bool Enable_C_Sell = true;
extern string Setting3 = "-------Automatic MSP Control for Cycle--------";
extern bool Enable_ASP_C1 = true;
extern bool Enable_ASP_C2 = true;
extern bool Enable_ASP_C3 = true;
extern bool Enable_ASP_C4 = true;
extern string Setting4 = "------------ADDITIONAL-Cycles Control----------";
extern bool Enable_BRT_Pyramiding = true;
extern bool Enable_INV_Pyramiding = true;
extern bool Enable_REV_Pyramiding = true;
extern bool Enable_SCA_Pyramiding = true;
extern int Pos_Open_BRT = 50;
extern int Pos_Open_INV = 50;
extern int Pos_Open_REV = 50;
extern int Pos_Open_SCA = 50;
extern int Max_Open_BRT = 20;
extern int Max_Open_INV = 20;
extern int Max_Open_REV = 20;
extern int Max_Open_SCA = 20;
extern int Target_Distance_BRT = 100;
extern int Profit_Target_INV = 50;
extern int Profit_Target_REV = 100;
extern int Profit_Target_SCA = 20;
extern double Multiply_Lot_BRT = 2.0;
extern double Multiply_Lot_INV = 1.0;
extern double Multiply_Lot_REV = 2.0;
extern double Multiply_Lot_SCA = 2.0;
extern int Pos_Distance_BRT = 2;
extern int Pos_Distance_INV = 5;
extern int Pos_Distance_REV = 2;
extern int Pos_Distance_SCA = 2;
extern string Setting5 = "---------------Users Lot Size----------------";
extern double Lots_C1 = 0.01;
extern double Lots_C2 = 0.01;
extern double Lots_C3 = 0.01;
extern double Lots_C4 = 0.01;
extern string Setting6 = "-------------FORCE CLOSE Cycle---------------";
extern bool Force_CLOSE_Above = false;
extern bool Force_CLOSE_Below = false;
extern int Force_CLOSE_CycleNum = 0;
extern double Force_CLOSE_LimitPrice = 0.0;
extern string Setting7 = "-------------FORCE MSP Control---------------";
extern bool Force_MSP_Above = false;
extern bool Force_MSP_Below = false;
extern int Force_MSP_CycleNum = 0;
extern double Force_MSP_LimitPrice = 0.0;
extern double Force_MSP_BottomPrice = 0.0;
extern double Force_MSP_TopPrice = 0.0;
extern bool Move_SP = true;
extern bool Force_MSP_ADDCYCLE_Only = false;

double gd_832 = 0.0;
//double gd_840 = 0.0;
//double gd_848 = 0.0;
//double gd_856 = 0.0;
//double gd_864 = 0.0;
int gi_872 = 0;
int gi_904 = 100;
int gi_908 = 20;
int g_LotMulti = 0;
double gd_916;
double gd_924;
double g_Profit;
double gd_940;
int g_Pos_Distance = 3;
double gd_952 = -0.2;
bool gi_960 = false;
int g_ST_Delta = 1;
int g_RSI_Period = 12;
int g_Period_ADX = 19;
int g_Period_MA_M30 = 12;
int g_Period_MA_D1_2 = 9;
int g_Period_MA_D1 = 50;
int g_Slippage = 4;
int g_Magic1 = 10401;
int g_Magic2 = 10402;
int g_Magic3 = 10403;
int g_Magic4 = 10404;

// ST: Start Time; SP: Start Point
// TC: Total Close
// HU: Hanging Upperband, HL: Hanging Lowerband
// TU: Targeted Upperband, TL:Targeted Lowerband

string g_var_name_1048 = "Total Simultaneous Close";



string gs_C1B = "C1B";
string gs_C1S = "C1S";
string gs_C2B = "C2B";
string gs_C2S = "C2S";
string gs_D3B = "D3B";
string gs_D3S = "D3S";
string gs_D4B = "D4B";
string gs_D4S = "D4S";


double g_SP1;
double g_SP2;
double g_SP3;
double g_SP4;
double g_Lot1;
double g_Lot2;
double g_Lot3;
double g_Lot4;
int g_ST1 = 0;
int g_ST2 = 0;
int g_ST3 = 0;
int g_ST4 = 0;
double g_AccountEquity;
int g_RSI_B = 0;
int g_RSI_S = 0;
int g_RSI_B_H4 = 0;
int g_RSI_S_H4 = 0;
int gi_1392 = 0;
int g_TC1 = 0;
int g_TC2 = 0;
int g_TC3 = 0;
int g_TC4 = 0;
string gs_1412;
bool g_EnableForceMSP1 = true;
bool g_EnableForceMSP2 = true;
bool g_EnableForceMSP3 = true;
bool g_EnableForceMSP4 = true;

bool gi_1452 = true;
bool gi_1456 = true;
bool gi_1460 = true;
bool gi_1464 = true;
bool g_MiniAccount = false;
double g_IDX0;
double g_IDX1;
double g_ATR_M30;
double g_MA_M30;
double g_MA_M30_ATR_L;
double g_MA_M30_ATR_H;
double g_ATR_D1;
double g_MA_D1;
double g_MA_D1_ATR_L;
double g_MA_D1_ATR_H;
double g_MACD_D1_M;
double g_MACD_D1_S;
double g_MACD_H4_M;
double g_MACD_H4_S;
int g_ATR_Multi = 2;
int gi_unused_1600 = 0;
double g_MA_D1_2;
double g_MA_D1_3;
double g_MA_H4;
bool g_HU;
bool g_HL;
bool g_TU;
bool g_TL;
double g_Point;
int gi_1652 = 1;
double gd_1656 = 0.0;
double gd_1664 = 0.0;
int g_datetime_1672;
int gi_1676 = 0;
int g_ord_total_1680 = 0;


// EURUSD, M30, SP_Distance > 50
int CekCondition() {
   if (Digits == 4 || Digits == 2) g_Point = Point;
   else
      if (Digits == 5 || Digits == 3) g_Point = 10.0 * Point;
   
   double l_lotsize_4 = MarketInfo(Symbol(), MODE_LOTSIZE);
   if (l_lotsize_4 == 100000.0) {
      g_MiniAccount = false;
   }
   if (l_lotsize_4 == 10000.0) {
      g_MiniAccount = true;
   }
   
   return (1);
}

string DateToStr(int ai_0) {
   return (TimeMonth(ai_0) + "-" + TimeDay(ai_0) + "-" + TimeYear(ai_0));
}

// 账户当前Order总盈利
double MyAccountProfit(int a_magic_0) {
   int l_cmd_4;
   double ld_ret_8 = 0;
   int l_ord_total_16 = OrdersTotal();
   if (l_ord_total_16 > 0) {
      for (int l_pos_20 = l_ord_total_16 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_TRADES);
         l_cmd_4 = OrderType();
         if (OrderMagicNumber() == a_magic_0)
            if (l_cmd_4 == OP_BUY || l_cmd_4 == OP_SELL) ld_ret_8 += OrderProfit() + OrderSwap() + OrderCommission();
      }
      return (ld_ret_8);
   }
   return (0);
}

// 账户当前Order 分类型，comment盈利情况
double AddPyrProfit(int a_magic_0, int a_cmd_4, string as_8) {
   double ld_ret_16 = 0;
   int l_ord_total_24 = OrdersTotal();
   if (l_ord_total_24 > 0) {
      for (int l_pos_28 = l_ord_total_24 - 1; l_pos_28 >= 0; l_pos_28--) {
         OrderSelect(l_pos_28, SELECT_BY_POS, MODE_TRADES);
         if (OrderType() == a_cmd_4 && OrderMagicNumber() == a_magic_0 && OrderComment() == as_8) ld_ret_16 += OrderProfit() + OrderSwap() + OrderCommission();
      }
      return (ld_ret_16);
   }
   return (0);
}

// 小于某个时间的账户历史盈利情况
double ClosedProfit(int a_magic_0, int ai_4) {
   double ld_ret_8 = 0;
   int l_hist_total_16 = OrdersHistoryTotal();
   if (l_hist_total_16 > 0 && ai_4 > 0) {
      for (int l_pos_20 = l_hist_total_16 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_HISTORY);
         if (OrderMagicNumber() == a_magic_0)
            if (OrderOpenTime() >= ai_4) ld_ret_8 += OrderProfit() + OrderSwap() + OrderCommission();
      }
      return (ld_ret_8);
   }
   return (0);
}

// 关闭当前Order
double Close1ZLProfit(int a_magic_0, color a_color_4, int a_slippage_8) {
   int l_cmd_12;
   bool l_ord_close_16;
   int l_ord_total_20 = OrdersTotal();
   for (int l_pos_24 = l_ord_total_20 - 1; l_pos_24 >= 0; l_pos_24--) {
      OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
      l_cmd_12 = OrderType();
      l_ord_close_16 = false;
      switch (l_cmd_12) {
      case OP_BUY:
         if (OrderMagicNumber() == a_magic_0) l_ord_close_16 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), a_slippage_8, a_color_4);
         break;
      case OP_SELL:
         if (OrderMagicNumber() == a_magic_0) l_ord_close_16 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), a_slippage_8, a_color_4);
      }
   }
   return (0.0);
}

// 关闭当前Order，分类型，comment
double CloseAddPyr(int a_magic_0, int a_cmd_4, string as_8, color a_color_16, int a_slippage_20) {
   int l_cmd_24;
   bool l_ord_close_28;
   int l_ord_total_32 = OrdersTotal();
   for (int l_pos_36 = l_ord_total_32 - 1; l_pos_36 >= 0; l_pos_36--) {
      OrderSelect(l_pos_36, SELECT_BY_POS, MODE_TRADES);
      l_cmd_24 = OrderType();
      l_ord_close_28 = false;
      if (l_cmd_24 == a_cmd_4 && a_cmd_4 == OP_BUY && OrderComment() == as_8 && OrderMagicNumber() == a_magic_0) l_ord_close_28 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), a_slippage_20, a_color_16);
      if (l_cmd_24 == a_cmd_4 && a_cmd_4 == OP_SELL && OrderComment() == as_8 && OrderMagicNumber() == a_magic_0) l_ord_close_28 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), a_slippage_20, a_color_16);
   }
   return (0.0);
}

// 账户总Order数量
int MyOrdersTotal(int a_magic_0) {
   int l_cmd_4;
   int l_ord_total_8 = OrdersTotal();
   int l_count_12 = 0;
   l_ord_total_8 = OrdersTotal();
   if (l_ord_total_8 > 0) {
      for (int l_pos_16 = l_ord_total_8 - 1; l_pos_16 >= 0; l_pos_16--) {
         OrderSelect(l_pos_16, SELECT_BY_POS, MODE_TRADES);
         l_cmd_4 = OrderType();
         if (l_cmd_4 == OP_BUY || l_cmd_4 == OP_SELL && OrderMagicNumber() == a_magic_0) l_count_12++;
      }
   }
   return (l_count_12);
}

// 账户分Buy，Sell Order类型
int BSOrdersTotal(int a_magic_0, int ai_4) {
   int l_cmd_8;
   int l_ord_total_12 = OrdersTotal();
   int l_count_16 = 0;
   l_ord_total_12 = OrdersTotal();
   if (l_ord_total_12 > 0) {
      for (int l_pos_20 = l_ord_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_TRADES);
         l_cmd_8 = OrderType();
         if (l_cmd_8 == OP_BUY && ai_4 == 0 && OrderMagicNumber() == a_magic_0) l_count_16++;
         else
            if (l_cmd_8 == OP_SELL && ai_4 == 1 && OrderMagicNumber() == a_magic_0) l_count_16++;
      }
   }
   return (l_count_16);
}


// 账户分类型，comment Order数量
int AddPyrOrders(int a_magic_0, int a_cmd_4, string as_8) {
   int l_ord_total_16 = OrdersTotal();
   int l_count_20 = 0;
   l_ord_total_16 = OrdersTotal();
   if (l_ord_total_16 > 0) {
      for (int l_pos_24 = l_ord_total_16 - 1; l_pos_24 >= 0; l_pos_24--) {
         OrderSelect(l_pos_24, SELECT_BY_POS, MODE_TRADES);
         if (OrderType() == a_cmd_4 && OrderMagicNumber() == a_magic_0 && OrderComment() == as_8) l_count_20++;
      }
   }
   return (l_count_20);
}

bool CheckZL(int a_magic_0, double ad_4) {
   if (a_magic_0 == g_Magic1) {
      if (MathAbs(ad_4 - g_SP2) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP3) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP4) >= SP_Distance * g_Point && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST2)) > g_ST_Delta &&
         MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST3)) > g_ST_Delta && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST4)) > g_ST_Delta) return (true);
      return (false);
   }
   if (a_magic_0 == g_Magic2) {
      if (MathAbs(ad_4 - g_SP1) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP3) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP4) >= SP_Distance * g_Point && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST1)) > g_ST_Delta &&
         MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST3)) > g_ST_Delta && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST4)) > g_ST_Delta) return (true);
      return (false);
   }
   if (a_magic_0 == g_Magic3) {
      if (MathAbs(ad_4 - g_SP1) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP2) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP4) >= SP_Distance * g_Point && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST1)) > g_ST_Delta &&
         MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST2)) > g_ST_Delta && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST4)) > g_ST_Delta) return (true);
      return (false);
   }
   if (a_magic_0 == g_Magic4) {
      if (MathAbs(ad_4 - g_SP1) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP2) >= SP_Distance * g_Point && MathAbs(ad_4 - g_SP3) >= SP_Distance * g_Point && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST1)) > g_ST_Delta &&
         MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST2)) > g_ST_Delta && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST3)) > g_ST_Delta) return (true);
      return (false);
   }
   return (false);
}

// 是否存在和当前价格一致的Order，如没有返回True
int IsNewTrade(int a_magic_0, int ai_4) {
   int l_cmd_8;
   int l_ord_total_12 = OrdersTotal();
   bool li_ret_16 = true;
   l_ord_total_12 = OrdersTotal();
   if (l_ord_total_12 > 0) {
      for (int l_pos_20 = l_ord_total_12 - 1; l_pos_20 >= 0; l_pos_20--) {
         OrderSelect(l_pos_20, SELECT_BY_POS, MODE_TRADES);
         l_cmd_8 = OrderType();
         switch (l_cmd_8) {
         case OP_BUY:
            if (ai_4 == 0 && OrderMagicNumber() == a_magic_0 && OrderOpenPrice() == Ask) li_ret_16 = false;
         case OP_SELL:
            if (ai_4 == 1 && OrderMagicNumber() == a_magic_0 && OrderOpenPrice() == Bid) li_ret_16 = false;
            continue;
         }
      }
   }
   return (li_ret_16);
}

void CekRSI() {
   if (g_RSI_B == 0 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 70.0 || g_RSI_B == 2 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 70.0) {
      g_RSI_B = 1;
      g_RSI_S = 0;
   } else {
      if (g_RSI_B == 1 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 70.0) {
         g_RSI_B = 2;
      }
   }
   if (g_RSI_S == 0 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 30.0 || g_RSI_S == 2 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 30.0) {
      g_RSI_S = 1;
      g_RSI_B = 0;
      return;
   }
   if (g_RSI_S == 1 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 30.0) {
      g_RSI_S = 2;
   }
}

void CekRSI_H4() {
   if (g_RSI_B_H4 == 0 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) > 70.0 || g_RSI_B_H4 == 2 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) > 70.0) {
      g_RSI_B_H4 = 1;
      g_RSI_S_H4 = 0;
   } else {
      if (g_RSI_B_H4 == 1 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) < 70.0) {
         g_RSI_B_H4 = 2;
      }
   }
   if (g_RSI_S_H4 == 0 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) < 30.0 || g_RSI_S_H4 == 2 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) < 30.0) {
      g_RSI_S_H4 = 1;
      g_RSI_B_H4 = 0;
      return;
   }
   if (g_RSI_S_H4 == 1 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 30.0) {
      g_RSI_S_H4 = 2;
   }
}

int init() {
   double ld_0 = Prt_Up_Profit / 100.0 + 1.0;
   g_LotMulti = 1000;
   g_LotMulti = 1000.0 * ld_0;

   g_datetime_200 = 0;

   Automatic_MSP_Trend = false;
   Automatic_MSP_Reversal = false;
   Param1 = false;
   Param2 = false;
   Param3 = false;
   Param4 = false;
   Param6 = false;
   gi_280 = TimeCurrent();
   HideTestIndicators(true);
   g_TC1 = 0;
   g_TC2 = 0;
   g_TC3 = 0;
   g_TC4 = 0;
   
   gi_1392 = GlobalVariableGet(g_var_name_1048);
   if (GetLastError() != 0/* NO_ERROR */) {
      gi_1392 = 0;
      GlobalVariableSet(g_var_name_1048, 0);
   }
   g_Lot1 = Lots_C1;
   g_Lot2 = Lots_C2;
   g_Lot3 = Lots_C3;
   g_Lot4 = Lots_C4;
   
   g_SP1 = 0;
   g_SP2 = 0;
   g_SP3 = 0;
   g_SP4 = 0;
   g_ST1 = 0;
   g_ST2 = 0;
   g_ST3 = 0;
   g_ST4 = 0;
   
   
   g_AccountEquity = AccountEquity();
   
   
   return (0);
}

int deinit() {
   return (0);
}

int DoPyramiding(int a_magic_0) {
   double l_SP;
   double l_lot;
   string l_comment_B;
   string l_comment_S;
   string ls_unused_36;
   
   if (a_magic_0 == g_Magic1) 
   {
      l_SP = g_SP1;
      l_lot = g_Lot1;
      l_comment_B = gs_C1B + " (" + DoubleToStr(g_TC1 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
      l_comment_S = gs_C1S + " (" + DoubleToStr(g_TC1 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_SP = g_SP2;
      l_lot = g_Lot2;
      l_comment_B = gs_C2B + " (" + DoubleToStr(g_TC2 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
      l_comment_S = gs_C2S + " (" + DoubleToStr(g_TC2 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_SP = g_SP3;
      l_lot = g_Lot3;
      l_comment_B = gs_D3B + " (" + DoubleToStr(g_TC3 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
      l_comment_S = gs_D3S + " (" + DoubleToStr(g_TC3 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_SP = g_SP4;
      l_lot = g_Lot4;
      l_comment_B = gs_D4B + " (" + DoubleToStr(g_TC4 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
      l_comment_S = gs_D4S + " (" + DoubleToStr(g_TC4 + 1.0, 0) + "/" + DoubleToStr(g_AccountEquity, 2) + "/" + AccountNumber() + ")";
   }
   
   double ld_44 = 0;
   double ld_52 = 0;
   double ld_60 = 100;
   double ld_68 = 100;
   int l_ticket_76;
   int l_error_80;
   
   /*if (gd_840 == 0.0) ld_44 = 0;
   else ld_44 = gd_840;
   if (gd_856 == 0.0) ld_52 = 0;
   else ld_52 = gd_856;
   if (gd_848 == 0.0) ld_60 = 100;
   else ld_60 = gd_848;
   if (gd_864 == 0.0) ld_68 = 100;
   else ld_68 = gd_864;*/
   
   if (IsNewTrade(a_magic_0, 1) && Bid < l_SP && MathMod(Bid / g_Point, g_Pos_Distance) == 0.0 && Bid < ld_68 && Bid > ld_52 && C_Cycle_Short == 1 && Enable_C_Sell) {
      l_ticket_76 = OrderSend(Symbol(), OP_SELL, l_lot, Bid, g_Slippage, 0, 0, l_comment_S, a_magic_0, 0, Red);
      l_error_80 = GetLastError();
      if (l_error_80 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size:" + l_lot + " - please override with correct setting");
      return (l_error_80);
   }
   if (IsNewTrade(a_magic_0, 0) && Ask > l_SP && MathMod(Ask / g_Point, g_Pos_Distance) == 0.0 && Ask > ld_44 && Ask < ld_60 && C_Cycle_Long == 1 && Enable_C_Buy) {
      l_ticket_76 = OrderSend(Symbol(), OP_BUY, l_lot, Ask, g_Slippage, 0, 0, l_comment_B, a_magic_0, 0, Green);
      l_error_80 = GetLastError();
      if (l_error_80 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size:" + l_lot + " - please override with correct setting");
      return (l_error_80);
   }
   return (0);
}

void Do_BRT_Pyramiding(int a_magic_0) {
   string ls_4;
   string l_comment_B;
   string l_comment_S;
   double l_SP;
   double l_lot;
   
   if (a_magic_0 == g_Magic1) 
   {
      l_SP = g_SP1;
      l_lot = g_Lot1 * Multiply_Lot_BRT;
      ls_4 = "CYCLE-C1";
      l_comment_B = gs_C1B + "ADD-BRT";
      l_comment_S = gs_C1S + "ADD-BRT";
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_SP = g_SP2;
      l_lot = g_Lot2 * Multiply_Lot_BRT;
      ls_4 = "CYCLE-C2";
      l_comment_B = gs_C2B + "ADD-BRT";
      l_comment_S = gs_C2S + "ADD-BRT";
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_SP = g_SP3;
      l_lot = g_Lot3 * Multiply_Lot_BRT;
      ls_4 = "CYCLE-C3";
      l_comment_B = gs_D3B + "ADD-BRT";
      l_comment_S = gs_D3S + "ADD-BRT";
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_SP = g_SP4;
      l_lot = g_Lot4 * Multiply_Lot_BRT;
      ls_4 = "CYCLE-C4";
      l_comment_B = gs_D4B + "ADD-BRT";
      l_comment_S = gs_D4S + "ADD-BRT";
   }

   if (g_MA_D1_2 > g_MA_D1_3 && iHigh(NULL, PERIOD_D1, 1) > g_MA_D1_ATR_H && iLow(NULL, PERIOD_D1, 1) < g_MA_D1_ATR_H) 
   {
      g_HU = true;
      g_HL = false;
      g_TU = false;
      g_TL= false;
   } 
   else if (g_MA_D1_2 < g_MA_D1_3 && iHigh(NULL, PERIOD_D1, 1) > g_MA_D1_ATR_L && iLow(NULL, PERIOD_D1, 1) < g_MA_D1_ATR_L) 
   {
      g_HL = true;
      g_HU = false;
      g_TU = false;
      g_TL= false;
   }
   if (g_HU && iClose(NULL, PERIOD_D1, 1) < g_MA_D1 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 50.0) 
   {
      g_TL= true;
      g_TU = false;
   } 
   else if (g_HL && iClose(NULL, PERIOD_D1, 1) > g_MA_D1 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 50.0) 
   {
      g_TU = true;
      g_TL= false;
   }
   
   int l_ord_total_44;
   int l_cmd_48;
   int l_ord_close_52;
   int l_ticket_56;
   int l_error_60;
   
   if (g_TU && iClose(NULL, 0, 0) > g_MA_D1_ATR_H) 
   {
      gs_1412 = "MSP ADD-BREAKTHROUGH (UPTREND): CLOSE BUY ORDER FOR " + ls_4 + " | " + DateToStr(TimeCurrent());
      l_ord_total_44 = OrdersTotal();
      for (int l_pos_64 = l_ord_total_44 - 1; l_pos_64 >= 0; l_pos_64--) {
         OrderSelect(l_pos_64, SELECT_BY_POS);
         l_cmd_48 = OrderType();
         if (l_cmd_48 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == l_comment_B) 
            l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, LightGreen);
      }
   } 
   else if (g_TL&& iClose(NULL, 0, 0) < g_MA_D1_ATR_L) 
   {
      gs_1412 = "MSP ADD-BREAKTHROUGH (DNTREND): CLOSE SELL ORDER FOR " + ls_4 + " | " + DateToStr(TimeCurrent());
      l_ord_total_44 = OrdersTotal();
      for (l_pos_64 = l_ord_total_44 - 1; l_pos_64 >= 0; l_pos_64--) {
         OrderSelect(l_pos_64, SELECT_BY_POS);
         l_cmd_48 = OrderType();
         if (l_cmd_48 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == l_comment_S) 
            l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, LightGreen);
      }
   }
   
   if (MyOrdersTotal(a_magic_0) > Pos_Open_BRT) 
   {
      if (g_TL&& iClose(NULL, 0, 0) < g_MA_D1 && iClose(NULL, 0, 0) < g_MA_D1_2) 
      {
         gs_1412 = "MSP ADD-BREAKTHROUGH (DNTREND): CLOSE ALL-BUY AT MIDLE-BAND FOR " + ls_4 + " | " + DateToStr(TimeCurrent());
         if (iClose(NULL, 0, 0) > l_SP) l_SP = iClose(NULL, 0, 0);
         l_ord_total_44 = OrdersTotal();
         for (l_pos_64 = l_ord_total_44 - 1; l_pos_64 >= 0; l_pos_64--) {
            OrderSelect(l_pos_64, SELECT_BY_POS);
            l_cmd_48 = OrderType();
            if (l_cmd_48 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > g_Profit) 
               l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, LightGreen);
         }
      } 
      else if (g_TU && iClose(NULL, 0, 0) > g_MA_D1 && iClose(NULL, 0, 0) > g_MA_D1_2) 
      {
         gs_1412 = "MSP ADD-BREAKTHROUGH (UPTREND): CLOSE ALL-SELL AT MIDLE-BAND FOR " + ls_4 + " | " + DateToStr(TimeCurrent());
         if (iClose(NULL, 0, 0) < l_SP) l_SP = iClose(NULL, 0, 0);
         l_ord_total_44 = OrdersTotal();
         for (l_pos_64 = l_ord_total_44 - 1; l_pos_64 >= 0; l_pos_64--) {
            OrderSelect(l_pos_64, SELECT_BY_POS);
            l_cmd_48 = OrderType();
            if (l_cmd_48 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > g_Profit) 
               l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, LightGreen);
         }
      }
      
      if (Bid < l_SP && IsNewTrade(a_magic_0, 1) && MathMod(Bid / g_Point, Pos_Distance_BRT) == 0.0 
         && AddPyrOrders(a_magic_0, OP_SELL, l_comment_S) < Max_Open_BRT && B_Cycle_Short == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_56 = OrderSend(Symbol(), OP_SELL, l_lot, Bid, g_Slippage, 0, 0, l_comment_S, a_magic_0, 0, Pink);
            l_error_60 = GetLastError();
            if (l_error_60 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
         }
      } else {
         if (Ask > l_SP && IsNewTrade(a_magic_0, 0) && MathMod(Ask / g_Point, Pos_Distance_BRT) == 0.0 
            && AddPyrOrders(a_magic_0, OP_BUY, l_comment_B) < Max_Open_BRT && B_Cycle_Long == 1) {
            if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
               l_ticket_56 = OrderSend(Symbol(), OP_BUY, l_lot, Ask, g_Slippage, 0, 0, l_comment_B, a_magic_0, 0, LawnGreen);
               l_error_60 = GetLastError();
               if (l_error_60 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            }
         }
      }
   }
}

int Do_INV_Pyramiding(int a_magic_0) {
   double l_lot;
   string l_comment_B;
   string l_comment_S;
   string ls_36;

   if (a_magic_0 == g_Magic1) 
   {
      l_lot = g_Lot1 * Multiply_Lot_INV;
      ls_36 = "CYCLE-C1";
      l_comment_B = gs_C1B + "ADD-INV";
      l_comment_S = gs_C1S + "ADD-INV";
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_lot = g_Lot2 * Multiply_Lot_INV;
      ls_36 = "CYCLE-C2";
      l_comment_B = gs_C2B + "ADD-INV";
      l_comment_S = gs_C2S + "ADD-INV";
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_lot = g_Lot3 * Multiply_Lot_INV;
      ls_36 = "CYCLE-C3";
      l_comment_B = gs_D3B + "ADD-INV";
      l_comment_S = gs_D3S + "ADD-INV";
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_lot = g_Lot4 * Multiply_Lot_INV;
      ls_36 = "CYCLE-C4";
      l_comment_B = gs_D4B + "ADD-INV";
      l_comment_S = gs_D4S + "ADD-INV";
   }
   
   int l_ord_total_44;
   int l_cmd_48;
   int l_ord_close_52;
   double ld_56;
   int l_ticket_64;
   int l_error_68;
   
   if (iClose(NULL, 0, 0) >= g_MA_D1_ATR_H || (iClose(NULL, 0, 0) - g_MA_D1) / g_Point >= gi_872) 
   {
      gs_1412 = "MSP ADD-INVERTED (UPTREND): CLOSE BUY ORDER FOR " + ls_36 + " | " + DateToStr(TimeCurrent());
      l_ord_total_44 = OrdersTotal();
      for (int l_pos_72 = l_ord_total_44 - 1; l_pos_72 >= 0; l_pos_72--) {
         OrderSelect(l_pos_72, SELECT_BY_POS);
         l_cmd_48 = OrderType();
         if (l_cmd_48 == OP_BUY && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == l_comment_B) 
            l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, LightGreen);
      }
   } 
   else if (iClose(NULL, 0, 0) <= g_MA_D1_ATR_L || (g_MA_D1 - iClose(NULL, 0, 0)) / g_Point >= gi_872) 
   {
      gs_1412 = "MSP ADD-INVERTED (DNTREND): CLOSE SELL ORDER FOR " + ls_36 + " | " + DateToStr(TimeCurrent());
      l_ord_total_44 = OrdersTotal();
      for (l_pos_72 = l_ord_total_44 - 1; l_pos_72 >= 0; l_pos_72--) {
         OrderSelect(l_pos_72, SELECT_BY_POS);
         l_cmd_48 = OrderType();
         if (l_cmd_48 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > 0.0 && OrderComment() == l_comment_S) 
            l_ord_close_52 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, LightGreen);
      }
   }
   
   if (Param5 == true) {
      if (!g_MiniAccount) 
         ld_56 = l_lot * g_LotMulti;
      else 
         ld_56 = l_lot / 10.0 * g_LotMulti;
      if (AddPyrProfit(a_magic_0, OP_SELL, l_comment_S) > ld_56) 
         CloseAddPyr(a_magic_0, OP_SELL, l_comment_S, Purple, g_Slippage);
      if (AddPyrProfit(a_magic_0, OP_BUY, l_comment_B) > ld_56) 
         CloseAddPyr(a_magic_0, OP_BUY, l_comment_B, Navy, g_Slippage);
   }
   if (MyOrdersTotal(a_magic_0) > Pos_Open_INV) 
   {
      if (IsNewTrade(a_magic_0, 1) && MathMod(Bid / g_Point, Pos_Distance_INV) == 0.0 
         && AddPyrOrders(a_magic_0, OP_SELL, l_comment_S) < Max_Open_INV && I_Cycle_Short == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_64 = OrderSend(Symbol(), OP_SELL, l_lot, Bid, g_Slippage, 0, Bid - Profit_Target_INV * g_Point, l_comment_S, a_magic_0, 0, Purple);
            l_error_68 = GetLastError();
            if (l_error_68 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_68);
         }
      }
      if (IsNewTrade(a_magic_0, 0) && MathMod(Ask / g_Point, Pos_Distance_INV) == 0.0 
         && AddPyrOrders(a_magic_0, OP_BUY, l_comment_B) < Max_Open_INV && I_Cycle_Long == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_64 = OrderSend(Symbol(), OP_BUY, l_lot, Ask, g_Slippage, 0, Ask + Profit_Target_INV * g_Point, l_comment_B, a_magic_0, 0, Navy);
            l_error_68 = GetLastError();
            if (l_error_68 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_68);
         }
      }
   }
   return (0);
}

int Do_REV_Pyramiding(int a_magic_0) {
   double l_lot;
   string l_comment_B;
   string l_comment_S;

   if (a_magic_0 == g_Magic1) 
   {
      l_lot = g_Lot1 * Multiply_Lot_REV;
      l_comment_B = gs_C1B + "ADD-REV";
      l_comment_S = gs_C1S + "ADD-REV";
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_lot = g_Lot2 * Multiply_Lot_REV;
      l_comment_B = gs_C2B + "ADD-REV";
      l_comment_S = gs_C2S + "ADD-REV";
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_lot = g_Lot3 * Multiply_Lot_REV;
      l_comment_B = gs_D3B + "ADD-REV";
      l_comment_S = gs_D3S + "ADD-REV";
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_lot = g_Lot4 * Multiply_Lot_REV;
      l_comment_B = gs_D4B + "ADD-REV";
      l_comment_S = gs_D4S + "ADD-REV";
   }
   
   int l_ticket_44;
   int l_error_48;
   if (MyOrdersTotal(a_magic_0) > Pos_Open_REV) {
      if (IsNewTrade(a_magic_0, 1) && MathMod(Bid / g_Point, Pos_Distance_REV) == 0.0 
         && AddPyrOrders(a_magic_0, OP_SELL, l_comment_S) < Max_Open_REV && R_Cycle_Short == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_44 = OrderSend(Symbol(), OP_SELL, l_lot, Bid, g_Slippage, 0, Bid - Profit_Target_REV * g_Point, l_comment_S, a_magic_0, 0, Fuchsia);
            l_error_48 = GetLastError();
            if (l_error_48 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_48);
         }
      }
      if (IsNewTrade(a_magic_0, 0) && MathMod(Ask / g_Point, Pos_Distance_REV) == 0.0 
         && AddPyrOrders(a_magic_0, OP_BUY, l_comment_B) < Max_Open_REV && R_Cycle_Long == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_44 = OrderSend(Symbol(), OP_BUY, l_lot, Ask, g_Slippage, 0, Ask + Profit_Target_REV * g_Point, l_comment_B, a_magic_0, 0, RoyalBlue);
            l_error_48 = GetLastError();
            if (l_error_48 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_48);
         }
      }
   }
   return (0);
}

int Do_SCA_Pyramiding(int a_magic_0) {
   double l_lot;
   string l_comment_B;
   string l_comment_S;

   if (a_magic_0 == g_Magic1) 
   {
      l_lot = g_Lot1 * Multiply_Lot_SCA;
      l_comment_B = gs_C1B + "ADD-SCA";
      l_comment_S = gs_C1S + "ADD-SCA";
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_lot = g_Lot2 * Multiply_Lot_SCA;
      l_comment_B = gs_C2B + "ADD-SCA";
      l_comment_S = gs_C2S + "ADD-SCA";
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_lot = g_Lot3 * Multiply_Lot_SCA;
      l_comment_B = gs_D3B + "ADD-SCA";
      l_comment_S = gs_D3S + "ADD-SCA";
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_lot = g_Lot4 * Multiply_Lot_SCA;
      l_comment_B = gs_D4B + "ADD-SCA";
      l_comment_S = gs_D4S + "ADD-SCA";
   }
   
   double ld_44;
   int l_ticket_52;
   int l_error_56;
   
   if (Param6 == true) {
      if (!g_MiniAccount) 
         ld_44 = l_lot * g_LotMulti;
      else 
         ld_44 = l_lot / 10.0 * g_LotMulti;
      if (AddPyrProfit(a_magic_0, OP_SELL, l_comment_S) > ld_44) 
         CloseAddPyr(a_magic_0, OP_SELL, l_comment_S, LightSalmon, g_Slippage);
      if (AddPyrProfit(a_magic_0, OP_BUY, l_comment_B) > ld_44) 
         CloseAddPyr(a_magic_0, OP_BUY, l_comment_B, LightBlue, g_Slippage);
   }
   if (MyOrdersTotal(a_magic_0) > Pos_Open_SCA) {
      if (IsNewTrade(a_magic_0, 1) && MathMod(Bid / g_Point, Pos_Distance_SCA) == 0.0 
         && AddPyrOrders(a_magic_0, OP_SELL, l_comment_S) < Max_Open_SCA && S_Cycle_Short == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_52 = OrderSend(Symbol(), OP_SELL, l_lot, Bid, g_Slippage, 0, Bid - Profit_Target_SCA * g_Point, l_comment_S, a_magic_0, 0, LightSalmon);
            l_error_56 = GetLastError();
            if (l_error_56 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_56);
         }
      }
      if (IsNewTrade(a_magic_0, 0) && MathMod(Ask / g_Point, Pos_Distance_SCA) == 0.0 
         && AddPyrOrders(a_magic_0, OP_BUY, l_comment_B) < Max_Open_SCA && S_Cycle_Long == 1) {
         if (l_lot > 0.0 && MarketInfo(Symbol(), MODE_SPREAD) <= MaxSpread_Allowed) {
            l_ticket_52 = OrderSend(Symbol(), OP_BUY, l_lot, Ask, g_Slippage, 0, Ask + Profit_Target_SCA * g_Point, l_comment_B, a_magic_0, 0, LightBlue);
            l_error_56 = GetLastError();
            if (l_error_56 == 131/* INVALID_TRADE_VOLUME */) Print("Unable to trade as invalid lot size - please override with correct setting");
            return (l_error_56);
         }
      }
   }
   return (0);
}

void MovingZeroLine(int a_magic_0) {
   int l_cmd_4;
   bool l_ord_close_8;
   int l_ord_total_12;
   
   double ld_56;
   
   double l_SP;
   double l_Lot;
   string ls_32;
   string ls_40;
   if (a_magic_0 == g_Magic1) 
   {
      l_SP = g_SP1;
      l_Lot = g_Lot1;
      ls_32 = "CYCLE-C1";
      ls_40 = gs_C1B;
   } 
   else if (a_magic_0 == g_Magic2) 
   {
      l_SP = g_SP2;
      l_Lot = g_Lot2;
      ls_32 = "CYCLE-C2";
      ls_40 = gs_C2B;
   } 
   else if (a_magic_0 == g_Magic3) 
   {
      l_SP = g_SP3;
      l_Lot = g_Lot3;
      ls_32 = "CYCLE-C3";
      ls_40 = gs_D3B;
   } 
   else if (a_magic_0 == g_Magic4) 
   {
      l_SP = g_SP4;
      l_Lot = g_Lot4;
      ls_32 = "CYCLE-C4";
      ls_40 = gs_D4B;
   }
   
   double ld_64 = 0;
   if (!g_MiniAccount) 
   {
      gd_916 = l_Lot * g_LotMulti;
      g_Profit = 0.3 * gd_916;
   } 
   else 
   {
      gd_916 = l_Lot / 10.0 * g_LotMulti;
      g_Profit = 0.3 * gd_916;
   }
   
   if ((g_MA_D1_2 < g_MA_D1_3 && iClose(NULL, PERIOD_D1, 0) <= g_MA_D1_2 && iClose(NULL, PERIOD_D1, 0) <= g_MA_H4 && g_MACD_D1_S > g_MACD_D1_M 
         && iMA(NULL, PERIOD_H4, 9, 0, MODE_SMA, PRICE_CLOSE, 0) < iMA(NULL, PERIOD_H4, 9, 0, MODE_SMA, PRICE_CLOSE, 1) && Automatic_MSP_Trend == 1) 
         || (g_MA_D1_2 < g_MA_D1_3 && iClose(NULL, PERIOD_D1, 0) < g_MA_D1_3 && iClose(NULL, PERIOD_D1, 1) > g_MA_D1_2 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 50.0 
            && g_RSI_B_H4 == 2 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) < 45.0 && Automatic_MSP_Trend == 1) 
         || (g_MA_D1_2 > g_MA_D1_3 && g_RSI_B == 2 && iClose(NULL, PERIOD_D1, 1) < g_MA_D1_2 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) < 45.0 
            && Automatic_MSP_Reversal == 1) 
         || (g_MA_D1_2 > g_MA_D1_3 && iHigh(NULL, PERIOD_D1, 1) > g_MA_D1_ATR_H && iLow(NULL, PERIOD_D1, 1) < g_MA_D1_ATR_H 
            && iClose(NULL, PERIOD_D1, 2) > iOpen(NULL, PERIOD_D1, 2) && iClose(NULL, PERIOD_D1, 1) < iOpen(NULL, PERIOD_D1, 1) 
            && iClose(NULL, PERIOD_D1, 1) < iMA(NULL, PERIOD_D1, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 1) 
            && iClose(NULL, 0, 0) < iHigh(NULL, PERIOD_D1, 1) && Automatic_MSP_Reversal == 1) 
         || (g_MA_D1_2 > g_MA_D1_3 && iHigh(NULL, PERIOD_D1, 2) > g_MA_D1_ATR_H && iLow(NULL, PERIOD_D1, 2) < g_MA_D1_ATR_H 
            && iClose(NULL, PERIOD_D1, 3) > iOpen(NULL, PERIOD_D1, 3) && iClose(NULL, PERIOD_D1, 2) < iOpen(NULL, PERIOD_D1, 2) 
            && iClose(NULL, PERIOD_D1, 1) < iOpen(NULL, PERIOD_D1, 1) && iClose(NULL, PERIOD_D1, 1) < iMA(NULL, PERIOD_D1, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 1) 
            && iClose(NULL, 0, 0) < iHigh(NULL, PERIOD_D1, 1) && Automatic_MSP_Reversal == 1) 
         ||  Param1) 
   {
      gs_1412 = "MSP ABOVE (DOWNTREND): TREND BEARISH FOR " + ls_32 + " | " + DateToStr(TimeCurrent()) + " | OPEN ORDER (BUY:SELL)= " + BSOrdersTotal(a_magic_0, 0) + ":" + BSOrdersTotal(a_magic_0, 1);
      if (Param3 == 0 && iClose(NULL, 0, 0) > l_SP) 
      {
         l_SP = iClose(NULL, 0, 0);
         g_RSI_B = 0;
         g_RSI_B_H4 = 0;
      }
      l_ord_total_12 = OrdersTotal();
      for (int l_pos_72 = l_ord_total_12 - 1; l_pos_72 >= 0; l_pos_72--) {
         OrderSelect(l_pos_72, SELECT_BY_POS);
         l_cmd_4 = OrderType();
         if (Param3 == true) 
         {
            if (l_cmd_4 == OP_BUY && OrderMagicNumber() == a_magic_0 
               && (OrderComment() == ls_40 + "ADD-BRT" || OrderComment() == ls_40 + "ADD-INV" || OrderComment() == ls_40 + "ADD-REV" || OrderComment() == ls_40 + "ADD-SCA"))
            {
               if (Param4 == true) 
               {
                  ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
                  l_ord_close_8 = false;
                  l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Red);
                  if (l_ord_close_8) ld_64 += ld_56;
               } 
               else 
               {
                  if (OrderProfit() + OrderSwap() + OrderCommission() > 0.0) {
                     ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
                     l_ord_close_8 = false;
                     l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Yellow);
                     if (l_ord_close_8) ld_64 += ld_56;
                  }
               }
            }
         } 
         else 
         {
            if (l_cmd_4 == OP_BUY && OrderMagicNumber() == a_magic_0) 
            {
               if (OrderProfit() + OrderSwap() + OrderCommission() > g_Profit) {
                  ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
                  l_ord_close_8 = false;
                  l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Yellow);
                  if (l_ord_close_8) ld_64 += ld_56;
               }
            }
         }
      }
   }
   
   
   if ((g_MA_D1_2 > g_MA_D1_3 && iClose(NULL, PERIOD_D1, 0) >= g_MA_D1_2 && iClose(NULL, PERIOD_D1, 0) >= g_MA_H4 && g_MACD_D1_S < g_MACD_D1_M 
         && iMA(NULL, PERIOD_H4, 9, 0, MODE_SMA, PRICE_CLOSE, 0) > iMA(NULL, PERIOD_H4, 9, 0, MODE_SMA, PRICE_CLOSE, 1) && Automatic_MSP_Trend == 1) 
      || (g_MA_D1_2 > g_MA_D1_3 && iClose(NULL, PERIOD_D1, 0) > g_MA_D1_3 && iClose(NULL, PERIOD_D1, 0) < g_MA_D1_2 
         && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 50.0 && g_RSI_S_H4 == 2 && iRSI(NULL, PERIOD_H4, g_RSI_Period, PRICE_CLOSE, 0) > 55.0 
         && Automatic_MSP_Trend == 1) 
      || (g_MA_D1_2 < g_MA_D1_3 && g_RSI_S == 2 && iClose(NULL, PERIOD_D1, 1) > g_MA_D1_2 && iRSI(NULL, PERIOD_D1, g_RSI_Period, PRICE_CLOSE, 0) > 55.0 
         && Automatic_MSP_Reversal == 1) 
      || (g_MA_D1_2 < g_MA_D1_3 && iLow(NULL, PERIOD_D1, 1) < g_MA_D1_ATR_L && iHigh(NULL, PERIOD_D1, 1) > g_MA_D1_ATR_L 
         && iClose(NULL, PERIOD_D1, 2) < iOpen(NULL, PERIOD_D1, 2) && iClose(NULL, PERIOD_D1, 1) > iOpen(NULL, PERIOD_D1, 1) 
         && iClose(NULL, PERIOD_D1, 1) > iMA(NULL, PERIOD_D1, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 1) 
         && iClose(NULL, 0, 0) > iLow(NULL, PERIOD_D1, 1) && Automatic_MSP_Reversal == 1) 
      || (g_MA_D1_2 < g_MA_D1_3 && iLow(NULL, PERIOD_D1, 2) < g_MA_D1_ATR_L && iHigh(NULL, PERIOD_D1, 2) > g_MA_D1_ATR_L 
         && iClose(NULL, PERIOD_D1, 3) < iOpen(NULL, PERIOD_D1, 3) && iClose(NULL, PERIOD_D1, 2) > iOpen(NULL, PERIOD_D1, 2) 
         && iClose(NULL, PERIOD_D1, 1) > iOpen(NULL, PERIOD_D1, 1) && iClose(NULL, PERIOD_D1, 1) > iMA(NULL, PERIOD_D1, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 1) 
         && iClose(NULL, 0, 0) > iLow(NULL, PERIOD_D1, 1) && Automatic_MSP_Reversal == 1)
      || Param2) 
      {
         gs_1412 = "MSP BELOW (UPTREND): TREND BULLISH FOR " + ls_32 + " | " + DateToStr(TimeCurrent()) + " | OPEN ORDER (BUY:SELL)= " + BSOrdersTotal(a_magic_0, 0) + ":" + BSOrdersTotal(a_magic_0, 1);
         if (Param3 == 0 && iClose(NULL, 0, 0) < l_SP) 
         {
            l_SP = iClose(NULL, 0, 0);
            g_RSI_S = 0;
            g_RSI_S_H4 = 0;
         }
         l_ord_total_12 = OrdersTotal();
         for (l_pos_72 = l_ord_total_12 - 1; l_pos_72 >= 0; l_pos_72--) 
         {
            OrderSelect(l_pos_72, SELECT_BY_POS);
            l_cmd_4 = OrderType();
            if (Param3 == true) 
            {
               if (l_cmd_4 == OP_SELL && OrderMagicNumber() == a_magic_0 
                  && (OrderComment() == ls_40 + "ADD-BRT" || OrderComment() == ls_40 + "ADD-INV" || OrderComment() == ls_40 + "ADD-REV" || OrderComment() == ls_40 + "ADD-SCA"))
               {
                  if (Param4 == true) 
                  {
                     ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
                     l_ord_close_8 = false;
                     l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Red);
                     if (l_ord_close_8) ld_64 += ld_56;
                  } 
                  else 
                  {
                     if (OrderProfit() + OrderSwap() + OrderCommission() > 0.0) {
                        ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
                        l_ord_close_8 = false;
                        l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Yellow);
                        if (l_ord_close_8) ld_64 += ld_56;
                  }
               }
            }
         } 
         else 
         {
            if (l_cmd_4 == OP_SELL && OrderMagicNumber() == a_magic_0 && OrderProfit() + OrderSwap() + OrderCommission() > g_Profit) 
            {
               ld_56 = OrderProfit() + OrderSwap() + OrderCommission();
               l_ord_close_8 = false;
               l_ord_close_8 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Yellow);
               if (l_ord_close_8) ld_64 += ld_56;
            }
         }
      }
   }
   
   if (a_magic_0 == g_Magic1) 
   {
      g_SP1 = l_SP;
      return;
   }
   if (a_magic_0 == g_Magic2) 
   {
      g_SP2 = l_SP;
      return;
   }
   if (a_magic_0 == g_Magic3) 
   {
      g_SP3 = l_SP;
      return;
   }
   if (a_magic_0 == g_Magic4) 
   {
      g_SP4 = l_SP;
   }
}

void ForceMSPAbove(int ai_0) {
   int l_cmd_4;
   int l_magic;
   int l_ord_close_12;
   double l_SP;

   string ls_32;
   string ls_40;
   string ls_48;
   double ld_56;
   double ld_64;
   
   if (ai_0 == 1) 
   {
      l_SP = g_SP1;
      l_magic = g_Magic1;
      ls_32 = "CYCLE-C1";
      ls_40 = gs_C1B;
      ls_48 = gs_C1S;
   } 
   else if (ai_0 == 2) 
   {
      l_SP = g_SP2;
      l_magic = g_Magic2;
      ls_32 = "CYCLE-C2";
      ls_40 = gs_C2B;
      ls_48 = gs_C2S;
   }
   else if (ai_0 == 3) 
   {
      l_SP = g_SP3;
      l_magic = g_Magic3;
      ls_32 = "CYCLE-C3";
      ls_40 = gs_D3B;
      ls_48 = gs_D3S;
   } 
   else if (ai_0 == 4) 
   {
      l_SP = g_SP4;
      l_SP = g_Magic4;
      ls_32 = "CYCLE-C4";
      ls_40 = gs_D4B;
      ls_48 = gs_D4S;
   }
   
   double ld_unused_72 = 0;
   if (Force_MSP_BottomPrice >= 0.0) ld_64 = Force_MSP_BottomPrice;
   else ld_64 = 0;
   if (Force_MSP_TopPrice > 0.0) ld_56 = Force_MSP_TopPrice;
   else ld_56 = 100;
   if (Move_SP && iClose(NULL, 0, 0) > l_SP) {
      l_SP = iClose(NULL, 0, 0);
      g_RSI_B = 0;
   }
   int l_ord_total_80 = OrdersTotal();
   for (int l_pos_84 = l_ord_total_80 - 1; l_pos_84 >= 0; l_pos_84--) {
      OrderSelect(l_pos_84, SELECT_BY_POS);
      l_cmd_4 = OrderType();
      if (Force_MSP_ADDCYCLE_Only) {
         if (l_cmd_4 == OP_BUY && OrderComment() == ls_40 + "ADD-BRT" || OrderComment() == ls_40 + "ADD-INV" || OrderComment() == ls_40 + "ADD-REV" || OrderComment() == ls_40 +
            "ADD-SCA" && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) {
            Print("Executing MSP Above => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Orange);
         }
      } else {
         if (l_cmd_4 == OP_BUY && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) {
            Print("Executing MSP Above => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Orange);
         }
      }
      if (Force_MSP_ADDCYCLE_Only) {
         if (l_cmd_4 == OP_SELL && OrderComment() == ls_48 + "ADD-BRT" || OrderComment() == ls_48 + "ADD-INV" || OrderComment() == ls_48 + "ADD-REV" || OrderComment() == ls_48 +
            "ADD-SCA" && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) {
            Print("Executing MSP Below => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Orange);
         }
      } else {
         if (l_cmd_4 == OP_SELL && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) {
            Print("Executing MSP Below => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Orange);
         }
      }
   }
   gs_1412 = "MANUAL MSP ABOVE (DOWNTREND): REVERSAL DOWN FOR " + ls_32 + " | " + DateToStr(TimeCurrent()) + " | OPEN ORDER (BUY:SELL)= " + BSOrdersTotal(l_magic, 0) + ":" + BSOrdersTotal(l_magic, 1);
   
   if (ai_0 == 1) 
   {
      g_SP1 = l_SP;
      g_EnableForceMSP1 = false;
      return;
   }
   if (ai_0 == 2) 
   {
      g_SP2 = l_SP;
      g_EnableForceMSP2 = false;
      return;
   }
   if (ai_0 == 3) 
   {
      g_SP3 = l_SP;
      g_EnableForceMSP3 = false;
      return;
   }
   if (ai_0 == 4) 
   {
      g_SP4 = l_SP;
      g_EnableForceMSP4 = false;
   }
}

void ForceMSPBelow(int ai_0) {
   int l_cmd_4;
   int l_magic;
   bool l_ord_close_12;
   double l_SP;
   string ls_32;
   string ls_40;
   string ls_48;
   double ld_56;
   double ld_64;
   
   if (ai_0 == 1) 
   {
      l_SP = g_SP1;
      l_magic = g_Magic1;
      ls_32 = "CYCLE-C1";
      ls_40 = gs_C1B;
      ls_48 = gs_C1S;
   } 
   else if (ai_0 == 2) 
   {
      l_SP = g_SP2;
      l_magic = g_Magic2;
      ls_32 = "CYCLE-C2";
      ls_40 = gs_C2B;
      ls_48 = gs_C2S;
   } 
   else if (ai_0 == 3) 
   {
      l_SP = g_SP3;
      l_magic = g_Magic3;
      ls_32 = "CYCLE-C3";
      ls_40 = gs_D3B;
      ls_48 = gs_D3S;
   } 
   else if (ai_0 == 4) 
   {
      l_SP = g_SP4;
      l_magic = g_Magic4;
      ls_32 = "CYCLE-C4";
      ls_40 = gs_D4B;
      ls_48 = gs_D4S;
   }

   if (Force_MSP_BottomPrice >= 0.0) 
      ld_64 = Force_MSP_BottomPrice;
   else 
      ld_64 = 0;
   if (Force_MSP_TopPrice > 0.0) 
      ld_56 = Force_MSP_TopPrice;
   else 
      ld_56 = 100;
   if (Move_SP && iClose(NULL, 0, 0) < l_SP) 
   {
      l_SP = iClose(NULL, 0, 0);
      g_RSI_S = 0;
   }
   int l_ord_total_80 = OrdersTotal();
   for (int l_pos_84 = l_ord_total_80 - 1; l_pos_84 >= 0; l_pos_84--) {
      OrderSelect(l_pos_84, SELECT_BY_POS);
      l_cmd_4 = OrderType();
      l_ord_close_12 = false;
      if (Force_MSP_ADDCYCLE_Only) 
      {
         if (l_cmd_4 == OP_SELL 
            && (OrderComment() == ls_48 + "ADD-BRT" || OrderComment() == ls_48 + "ADD-INV" || OrderComment() == ls_48 + "ADD-REV" || OrderComment() == ls_48 + "ADD-SCA")
            && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 
            && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) 
         {
            Print("Executing MSP Below => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Orange);
         }
      } 
      else 
      {
         if (l_cmd_4 == OP_SELL && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 
            && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) 
         {
            Print("Executing MSP Below => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_ASK), g_Slippage, Orange);
         }
      }
      
      if (Force_MSP_ADDCYCLE_Only) 
      {
         if (l_cmd_4 == OP_BUY 
            && (OrderComment() == ls_40 + "ADD-BRT" || OrderComment() == ls_40 + "ADD-INV" || OrderComment() == ls_40 + "ADD-REV" || OrderComment() == ls_48 + "ADD-SCA")
            && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 
            && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) 
         {
            Print("Executing MSP Above => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Orange);
         }
      } 
      else 
      {
         if (l_cmd_4 == OP_BUY && OrderMagicNumber() == l_magic && OrderOpenPrice() <= ld_56 && OrderOpenPrice() >= ld_64 
            && OrderProfit() + OrderSwap() + OrderCommission() > gd_832) 
         {
            Print("Executing MSP Above => Order Close for Cycle#: " + ai_0 + " | iClose=" + DoubleToStr(iClose(NULL, 0, 0), 4) + " | ZL=" + DoubleToStr(l_SP, 4));
            l_ord_close_12 = OrderClose(OrderTicket(), OrderLots(), MarketInfo(OrderSymbol(), MODE_BID), g_Slippage, Orange);
         }
      }
   }
   
   gs_1412 = "MANUAL MSP BELOW (UPTREND): REVERSAL UP FOR " + ls_32 + " | " + DateToStr(TimeCurrent()) + " | OPEN ORDER (BUY:SELL)= " + BSOrdersTotal(l_magic, 0) + ":" + BSOrdersTotal(l_magic, 1);
   if (ai_0 == 1) 
   {
      g_SP1 = l_SP;
      g_EnableForceMSP1 = false;
      return;
   }
   if (ai_0 == 2) 
   {
      g_SP2 = l_SP;
      g_EnableForceMSP2 = false;
      return;
   }
   if (ai_0 == 3) 
   {
      g_SP3 = l_SP;
      g_EnableForceMSP3 = false;
      return;
   }
   if (ai_0 == 4) 
   {
      g_SP4 = l_SP;
      g_EnableForceMSP4 = false;
   }
}

bool CalculateLotsTarget(int a_magic_0) {
   int li_4;
   if (Risk_Setting == 88) {
      if (g_AccountEquity > 1.5 * Initial_Capital) gi_1652 = 3;
      else {
         if (g_AccountEquity > 1.2 * Initial_Capital) gi_1652 = 2;
         else gi_1652 = 1;
      }
   } else gi_1652 = Risk_Setting;
   switch (gi_1652) {
   case 0:
      li_4 = 10000;
      break;
   case 1:
      li_4 = 10000;
      break;
   case 2:
      li_4 = 7000;
      break;
   case 3:
      li_4 = 5000;
      break;
   default:
      li_4 = 10000;
   }
   double ld_12 = AccountEquity();
   if (!g_MiniAccount && OrdersTotal() == 0 && ld_12 < li_4 && gi_1652 > 0) {
      Alert(AccountNumber() + ":Not enough funds to run this EA with the selected Risk Setting.");
      return (false);
   }
   if (g_MiniAccount && OrdersTotal() == 0 && ld_12 < li_4 / 10 && gi_1652 > 0) {
      Alert(AccountNumber() + ":Not enough funds to run this EA with the selected Risk Setting.");
      return (false);
   }
   if (!g_MiniAccount && gi_1652 > 0) 
   {
      if (a_magic_0 == g_Magic1) g_Lot1 = MathFloor(ld_12 / li_4) / 100.0;
      if (a_magic_0 == g_Magic2) g_Lot2 = MathFloor(ld_12 / li_4) / 100.0;
      if (a_magic_0 == g_Magic3) g_Lot3 = MathFloor(ld_12 / li_4) / 100.0;
      if (a_magic_0 == g_Magic4) g_Lot4 = MathFloor(ld_12 / li_4) / 100.0;
      gd_916 = g_Lot1 * g_LotMulti;
   } 
   else if (g_MiniAccount && gi_1652 > 0) 
   {
      if (a_magic_0 == g_Magic1) g_Lot1 = StrToDouble(DoubleToStr(ld_12 / li_4, 2)) / 10.0;
      if (a_magic_0 == g_Magic2) g_Lot2 = StrToDouble(DoubleToStr(ld_12 / li_4, 2)) / 10.0;
      if (a_magic_0 == g_Magic3) g_Lot3 = StrToDouble(DoubleToStr(ld_12 / li_4, 2)) / 10.0;
      if (a_magic_0 == g_Magic4) g_Lot4 = StrToDouble(DoubleToStr(ld_12 / li_4, 2)) / 10.0;
      gd_916 = g_Lot1 / 10.0 * g_LotMulti;
   } 
   else if (!g_MiniAccount && gi_1652 == 0) 
   {
      if (a_magic_0 == g_Magic1) g_Lot1 = Lots_C1;
      if (a_magic_0 == g_Magic2) g_Lot2 = Lots_C2;
      if (a_magic_0 == g_Magic3) g_Lot3 = Lots_C3;
      if (a_magic_0 == g_Magic4) g_Lot4 = Lots_C4;
      gd_916 = g_Lot1 * g_LotMulti;
   } 
   else if (g_MiniAccount && gi_1652 == 0) 
   {
      if (a_magic_0 == g_Magic1) g_Lot1 = Lots_C1;
      if (a_magic_0 == g_Magic2) g_Lot2 = Lots_C2;
      if (a_magic_0 == g_Magic3) g_Lot3 = Lots_C3;
      if (a_magic_0 == g_Magic4) g_Lot4 = Lots_C4;
      gd_916 = g_Lot1 / 10.0 * g_LotMulti;
   }
   
   gd_924 = 5.0 * gd_916;
   g_Profit = 0.3 * gd_916;
   gd_940 = gd_916 / 2.0;
   return (true);
}

/*
void createline(double a_price_0, int ai_8) {
   string l_name_12 = "Drawline";
   color l_color_20 = Black;
   switch (ai_8) {
   case 1:
      l_name_12 = "Drawline_C1";
      l_color_20 = Red;
      break;
   case 2:
      l_name_12 = "Drawline_C2";
      l_color_20 = Yellow;
      break;
   case 3:
      l_name_12 = "Drawline_C3";
      l_color_20 = Orange;
      break;
   case 4:
      l_name_12 = "Drawline_C4";
      l_color_20 = Pink;
   }
   ObjectDelete(l_name_12);
   ObjectCreate(l_name_12, OBJ_HLINE, 0, TimeCurrent(), a_price_0);
   ObjectSet(l_name_12, OBJPROP_COLOR, l_color_20);
   ObjectSet(l_name_12, OBJPROP_STYLE, STYLE_SOLID);
}

int deleteline(int ai_0) {
   string l_name_4 = "Drawline";
   switch (ai_0) {
   case 1:
      l_name_4 = "Drawline_C1";
      break;
   case 2:
      l_name_4 = "Drawline_C2";
      break;
   case 3:
      l_name_4 = "Drawline_C3";
      break;
   case 4:
      l_name_4 = "Drawline_C4";
   }
   ObjectDelete(l_name_4);
   return (0);
}
*/
int deleteline(int ai_0) {}

double TargetPrice(int a_magic_0, int ai_4, double ad_8, int ai_16, bool ai_20) {
   int l_global_var_24;

   double ld_36;
   double ld_44;
   double ld_ret_52;
   double ld_ret_60;
   int l_cmd_68;

   int l_ord_total_72 = OrdersTotal();
   l_ord_total_72 = OrdersTotal();
   if (l_ord_total_72 > 0) {
      for (int l_pos_80 = l_ord_total_72 - 1; l_pos_80 >= 0; l_pos_80--) {
         OrderSelect(l_pos_80, SELECT_BY_POS, MODE_TRADES);
         l_cmd_68 = OrderType();
         if (l_cmd_68 == OP_BUY && OrderMagicNumber() == a_magic_0) ld_36 += OrderLots() * MarketInfo(Symbol(), MODE_TICKVALUE);
         if (l_cmd_68 == OP_SELL && OrderMagicNumber() == a_magic_0) ld_44 += OrderLots() * MarketInfo(Symbol(), MODE_TICKVALUE);
      }
   }
   double ld_ret_84 = ld_36 - ld_44;
   double ld_ret_92 = ld_44 - ld_36;
   double ld_100 = MyAccountProfit(a_magic_0) + ClosedProfit(a_magic_0, l_global_var_24) - ad_8;
   if (ld_ret_84 > 0.0) 
   {
      ld_ret_52 = iClose(NULL, 0, 0) + MathAbs(ld_100 / ld_ret_84) * g_Point;
      //if (Show_Target_Line && !ai_20) createline(ld_ret_52, ai_4);
   } 
   else 
      ld_ret_52 = 0;
   if (ld_ret_92 > 0.0) {
      ld_ret_60 = iClose(NULL, 0, 0) - MathAbs(ld_100 / ld_ret_92) * g_Point;
      //if (Show_Target_Line && !ai_20) createline(ld_ret_60, ai_4);
   } else ld_ret_60 = 0;
   if (ai_20) {
      if (ai_16 == 0) {
         if (ld_ret_84 > 0.0) return (ld_ret_84);
         return (0);
      }
      if (ai_16 != 1) return (0.0);
      if (ld_ret_92 > 0.0) return (ld_ret_92);
      return (0);
   }
   if (ai_16 == 0) return (ld_ret_52);
   if (ai_16 == 1) return (ld_ret_60);
   return (0.0);
}

double FindLotSize(int a_magic_0) {
   int l_ord_total_4 = OrdersTotal();
   for (int l_pos_8 = l_ord_total_4 - 1; l_pos_8 >= 0; l_pos_8--) {
      OrderSelect(l_pos_8, SELECT_BY_POS, MODE_TRADES);
      if (OrderMagicNumber() == a_magic_0) 
      {
         if (a_magic_0 == g_Magic1) 
         {
            if (!((OrderComment() != gs_C1B + "ADD-BRT" && OrderComment() != gs_C1S + "ADD-BRT" && OrderComment() != gs_C1B + "ADD-INV" 
               && OrderComment() != gs_C1S + "ADD-INV" && OrderComment() != gs_C1B + "ADD-REV" && OrderComment() != gs_C1S + "ADD-REV" 
               && OrderComment() != gs_C1B + "ADD-SCA" && OrderComment() != gs_C1S + "ADD-SCA"))) 
                  continue;
            g_Lot1 = OrderLots();
            return (OrderLots());
         }
         if (a_magic_0 == g_Magic2) 
         {
            if (!((OrderComment() != gs_C1B + "ADD-BRT" && OrderComment() != gs_C1S + "ADD-BRT" && OrderComment() != gs_C1B + "ADD-INV" 
               && OrderComment() != gs_C1S + "ADD-INV" && OrderComment() != gs_C1B + "ADD-REV" && OrderComment() != gs_C1S + "ADD-REV" 
               && OrderComment() != gs_C1B + "ADD-SCA" && OrderComment() != gs_C1S + "ADD-SCA"))) 
               continue;
            g_Lot2 = OrderLots();
            return (OrderLots());
         }
         if (a_magic_0 == g_Magic3) 
         {
            if (!((OrderComment() != gs_C1B + "ADD-BRT" && OrderComment() != gs_C1S + "ADD-BRT" && OrderComment() != gs_C1B + "ADD-INV" 
               && OrderComment() != gs_C1S + "ADD-INV" && OrderComment() != gs_C1B + "ADD-REV" && OrderComment() != gs_C1S + "ADD-REV" 
               && OrderComment() != gs_C1B + "ADD-SCA" && OrderComment() != gs_C1S + "ADD-SCA"))) 
               continue;
            g_Lot3 = OrderLots();
            return (OrderLots());
         }
         if (a_magic_0 == g_Magic4) 
         {
            if (!((OrderComment() != gs_C1B + "ADD-BRT" && OrderComment() != gs_C1S + "ADD-BRT" && OrderComment() != gs_C1B + "ADD-INV" 
               && OrderComment() != gs_C1S + "ADD-INV" && OrderComment() != gs_C1B + "ADD-REV" && OrderComment() != gs_C1S + "ADD-REV" 
               && OrderComment() != gs_C1B + "ADD-SCA" && OrderComment() != gs_C1S + "ADD-SCA") ))
                  continue;
               g_Lot4 = OrderLots();
               return (OrderLots());
         }
      }
   }
   return (0);
}

int start() {
   
   string ls_20;
   double ld_36;
   double ld_44;
   double ld_52;
   double ld_60;
   double ld_68;
   double ld_76;
   double ld_84;
   double ld_92;
   double ld_100;
   double ld_108;
   double ld_116;
   double ld_124;
   double ld_132;
   double ld_140;
   double ld_148;
   double ld_156;
   double ld_164;
   double ld_172;
   double ld_180;
   double ld_188;
   double ld_196;
   double ld_204;
   double ld_212;
   double ld_220;
   string ls_260;
   string ls_268;
   string ls_276;
   string ls_284;
   string ls_300;
   string ls_308;
   string ls_316;
   string ls_324;
   string ls_340;
   string ls_348;
   string ls_356;
   string ls_364;
   string ls_372;
   string ls_380;
   string ls_388;
   string ls_404;
   string ls_412;
   string ls_420;
   string ls_428;
   string ls_436;
   string ls_444;
   string ls_452;
   string ls_460;
   string ls_476;
   string ls_484;
  
   CekCondition();
  
   
   g_IDX0 = iADX(NULL, PERIOD_M30, g_Period_ADX, PRICE_CLOSE, MODE_MAIN, 0);
   g_IDX1 = iADX(NULL, PERIOD_M30, g_Period_ADX, PRICE_CLOSE, MODE_MAIN, 1);
   g_MA_M30 = iMA(NULL, PERIOD_M30, g_Period_MA_M30, 0, MODE_SMA, PRICE_CLOSE, 0);
   g_ATR_M30 = g_ATR_Multi * iATR(NULL, PERIOD_M30, g_Period_MA_M30, 0);
   g_MA_M30_ATR_H = g_MA_M30 + g_ATR_M30;
   g_MA_M30_ATR_L = g_MA_M30 - g_ATR_M30;
   g_MA_D1 = iMA(NULL, PERIOD_D1, g_Period_MA_D1, 0, MODE_SMA, PRICE_CLOSE, 0);
   g_ATR_D1 = g_ATR_Multi * iATR(NULL, PERIOD_D1, g_Period_MA_D1, 0);
   g_MA_D1_ATR_H = g_MA_D1 + g_ATR_D1;
   g_MA_D1_ATR_L = g_MA_D1 - g_ATR_D1;
   g_MA_D1_3 = iMA(NULL, PERIOD_D1, g_Period_MA_D1, 0, MODE_SMA, PRICE_CLOSE, 0);
   g_MA_D1_2 = iMA(NULL, PERIOD_D1, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 0);
   g_MA_H4 = iMA(NULL, PERIOD_H4, g_Period_MA_D1_2, 0, MODE_SMA, PRICE_CLOSE, 0);
   g_MACD_D1_M = iMACD(NULL, PERIOD_D1, 12, 26, 9, PRICE_CLOSE, MODE_MAIN, 1);
   g_MACD_D1_S = iMACD(NULL, PERIOD_D1, 12, 26, 9, PRICE_CLOSE, MODE_SIGNAL, 1);
   g_MACD_H4_M = iMACD(NULL, PERIOD_H4, 12, 26, 9, PRICE_CLOSE, MODE_MAIN, 1);
   g_MACD_H4_S = iMACD(NULL, PERIOD_H4, 12, 26, 9, PRICE_CLOSE, MODE_SIGNAL, 1);
   CekRSI();
   CekRSI_H4();

   /*if (MyAccountProfit(g_Magic1) < gd_952 * g_AccountEquity 
      || MyAccountProfit(g_Magic2) < gd_952 * g_AccountEquity 
      || MyAccountProfit(g_Magic3) < gd_952 * g_AccountEquity 
      || MyAccountProfit(g_Magic4) < gd_952 * g_AccountEquity 
      || MyAccountProfit(g_Magic1) + MyAccountProfit(g_Magic2) + MyAccountProfit(g_Magic3) + MyAccountProfit(g_Magic4) < gd_952 * g_AccountEquity 
      || AccountProfit() < gd_952 * g_AccountEquity 
      || OrdersTotal() > gi_904) 
   {
         Enable_C1 = false;
         Enable_C2 = false;
         Enable_C3 = false;
         Enable_C4 = false;
      } else {
         Enable_C1 = Enable_C1;
         Enable_C2 = Enable_C2;
         Enable_C3 = Enable_C3;
         Enable_C4 = Enable_C4;
      }
   }*/
   
   string ls_492 = "";
   if (OrdersTotal() > 0) 
   {
      if (g_Lot1 > 0.0) 
         ld_36 = g_Lot1;
      else if (g_Lot2 > 0.0) 
         ld_36 = g_Lot2;
      else if (g_Lot3 > 0.0) 
         ld_36 = g_Lot3;
      else if (g_Lot4 > 0.0) 
         ld_36 = g_Lot4;

      if (!g_MiniAccount) {
         gd_924 = 5.0 * ld_36 * g_LotMulti;
         gd_916 = ld_36 * g_LotMulti;
      } else {
         gd_924 = 5.0 * ld_36 / 10.0 * g_LotMulti;
         gd_916 = ld_36 / 10.0 * g_LotMulti;
      }
   }
   
   if (OrdersTotal() > gi_904 || AccountEquity() > g_AccountEquity + gd_924 || (g_SP1 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST1)) > gi_908) ||
      (g_SP2 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST2)) > gi_908) || (g_SP3 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST3)) > gi_908) ||
      (g_SP4 != 0.0 && MathAbs(TimeDayOfYear(TimeCurrent()) - TimeDayOfYear(g_ST4)) > gi_908)) gi_960 = true;
   else gi_960 = false;
   if (gi_960 && Enable_Watermark_Calc) {
      if (!g_MiniAccount) ld_44 = ld_36 * g_LotMulti;
      else ld_44 = ld_36 / 10.0 * g_LotMulti;
      if (AccountEquity() > g_AccountEquity + ld_44) {
         ls_492 = "CLOSE ALL Profit C1-C4 at =" + AccountProfit();
         if (g_SP1 != 0.0) {
            while (MyOrdersTotal(g_Magic1) > 0) Close1ZLProfit(g_Magic1, White, g_Slippage);
            g_SP1 = 0;
            g_ST1 = 0;
            deleteline(1);
         }
         if (g_SP2 != 0.0) {
            while (MyOrdersTotal(g_Magic2) > 0) Close1ZLProfit(g_Magic2, White, g_Slippage);
            g_SP2 = 0;
            g_ST2 = 0;
            deleteline(2);
         }
         if (g_SP3 != 0.0) {
            while (MyOrdersTotal(g_Magic3) > 0) Close1ZLProfit(g_Magic3, White, g_Slippage);
            g_SP3 = 0;
            g_ST3 = 0;
            deleteline(3);
         }
         if (g_SP4 != 0.0) {
            while (MyOrdersTotal(g_Magic4) > 0) Close1ZLProfit(g_Magic4, White, g_Slippage);
            g_SP4 = 0;
            g_ST4 = 0;
            deleteline(4);
         }
         gi_1392++;
         GlobalVariableSet(g_var_name_1048, gi_1392);
      }
   }
   if (OrdersTotal() == 0 && AccountEquity() > g_AccountEquity) {
      g_AccountEquity = AccountEquity();
   }
   
   double ld_500 = g_AccountEquity - AccountEquity();
   double ld_508 = Initial_Capital - AccountEquity();
   if (ld_500 / g_AccountEquity > gd_1656) {
      gd_1656 = ld_500 / g_AccountEquity;
      g_datetime_1672 = TimeCurrent();
   }
   if (ld_508 / Initial_Capital > gd_1664) gd_1664 = ld_508 / Initial_Capital;
   if (OrdersTotal() > g_ord_total_1680) g_ord_total_1680 = OrdersTotal();
   if (MyOrdersTotal(g_Magic1) > gi_1676) gi_1676 = MyOrdersTotal(g_Magic1);
   if (MyOrdersTotal(g_Magic2) > gi_1676) gi_1676 = MyOrdersTotal(g_Magic2);
   if (MyOrdersTotal(g_Magic3) > gi_1676) gi_1676 = MyOrdersTotal(g_Magic3);
   if (MyOrdersTotal(g_Magic4) > gi_1676) gi_1676 = MyOrdersTotal(g_Magic4);
   if (Check_Position_Left) {
      while (g_SP1 == 0.0 && MyOrdersTotal(g_Magic1) > 0 && MyOrdersTotal(g_Magic1) <= 10) Close1ZLProfit(g_Magic1, Red, 100);
      while (g_SP2 == 0.0 && MyOrdersTotal(g_Magic2) > 0 && MyOrdersTotal(g_Magic2) <= 10) Close1ZLProfit(g_Magic2, Red, 100);
      while (g_SP3 == 0.0 && MyOrdersTotal(g_Magic3) > 0 && MyOrdersTotal(g_Magic3) <= 10) Close1ZLProfit(g_Magic3, Red, 100);
      while (g_SP4 == 0.0 && MyOrdersTotal(g_Magic4) > 0 && MyOrdersTotal(g_Magic4) <= 10) Close1ZLProfit(g_Magic4, Red, 100);
   }
   double ld_516 = 0;
   if (g_SP1 != 0.0) {
      if (!g_MiniAccount) ld_516 = g_Lot1 * g_LotMulti;
      else ld_516 = g_Lot1 / 10.0 * g_LotMulti;
      ld_76 = TargetPrice(g_Magic1, 1, ld_516, 0, 0);
      ld_84 = TargetPrice(g_Magic1, 1, ld_516, 1, 0);
      ld_92 = TargetPrice(g_Magic1, 1, ld_516, 0, 1);
      ld_100 = TargetPrice(g_Magic1, 1, ld_516, 1, 1);

      if (MyAccountProfit(g_Magic1) + ClosedProfit(g_Magic1, g_ST1) >= ld_516) {
         while (MyOrdersTotal(g_Magic1) > 0) Close1ZLProfit(g_Magic1, Silver, g_Slippage);
         g_TC1++;
         g_SP1 = 0;
         g_ST1 = 0;
         deleteline(1);
      }
      ld_108 = (-StopLoss_Percentage) / 100.0 * g_AccountEquity;
      if (StopLoss_OpenPosNum > 0 && StopLoss_Distance > 0 && MyOrdersTotal(g_Magic1) > StopLoss_OpenPosNum) {
         if (MyAccountProfit(g_Magic1) + ClosedProfit(g_Magic1, g_ST1) >= ld_108 && MathAbs(iClose(NULL, 0, 0) - ld_84) / g_Point < StopLoss_Distance || MathAbs(iClose(NULL, 0, 0) - ld_76) / g_Point < StopLoss_Distance) {
            while (MyOrdersTotal(g_Magic1) > 0) Close1ZLProfit(g_Magic1, Silver, g_Slippage);
            g_TC1++;
            g_SP1 = 0;
            g_ST1 = 0;
            deleteline(1);
         }
      }
   }
   if (g_SP1 == 0.0 && Enable_C1 && (DayOfWeek() >= Start_Trading_Day && DayOfWeek() <= End_Trading_Day)) {
      if (Use_Keltner_Entry) {
         if ((g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) > g_MA_M30_ATR_H) || (g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) < g_MA_M30_ATR_L)) {
            if (CheckZL(g_Magic1, iClose(NULL, 0, 0))) {
               if (CalculateLotsTarget(g_Magic1)) {
                  g_SP1 = iClose(NULL, 0, 0);
                  g_ST1 = TimeCurrent();
               }
            }
         }
      } else {
         if (CheckZL(g_Magic1, iClose(NULL, 0, 0))) {
            if (CalculateLotsTarget(g_Magic1)) {
               g_SP1 = iClose(NULL, 0, 0);
               g_ST1 = TimeCurrent();
            }
         }
      }
   }
   if (g_SP1 != 0.0) 
   {
      if (Enable_ASP_C1) 
         MovingZeroLine(g_Magic1);
      if (g_Lot1 <= 0.01) 
         FindLotSize(g_Magic1);
      DoPyramiding(g_Magic1);
      
      if (Enable_BRT_Pyramiding) 
         Do_BRT_Pyramiding(g_Magic1);
      if (Enable_REV_Pyramiding) 
         Do_REV_Pyramiding(g_Magic1);
      if (Enable_INV_Pyramiding) 
         Do_INV_Pyramiding(g_Magic1);
      if (Enable_SCA_Pyramiding) 
         Do_SCA_Pyramiding(g_Magic1);
         
      if (Force_MSP_Above && iClose(NULL, 0, 0) >= Force_MSP_LimitPrice && Force_MSP_CycleNum == 1) 
      {
         if (g_EnableForceMSP1) 
         {
            ForceMSPAbove(1);
            g_EnableForceMSP1 = false;
         }
      }
      if (Force_MSP_Below && iClose(NULL, 0, 0) <= Force_MSP_LimitPrice && Force_MSP_CycleNum == 1) {
         if (g_EnableForceMSP1) {
            ForceMSPBelow(1);
            g_EnableForceMSP1 = false;
         }
      }
      if (Force_CLOSE_Above && gi_1452 && iClose(NULL, 0, 0) >= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 1) {
         Close1ZLProfit(g_Magic1, Chocolate, g_Slippage);
         gi_1452 = false;
         deleteline(1);
         Force_CLOSE_Above = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
      if (Force_CLOSE_Below && gi_1452 && iClose(NULL, 0, 0) <= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 1) {
         Close1ZLProfit(g_Magic1, Chocolate, g_Slippage);
         gi_1452 = false;
         deleteline(1);
         Force_CLOSE_Below = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
   }
   
   if (g_SP2 != 0.0) {
      if (!g_MiniAccount) ld_52 = g_Lot2 * g_LotMulti;
      else ld_52 = g_Lot2 / 10.0 * g_LotMulti;
      ld_116 = TargetPrice(g_Magic2, 2, ld_52, 0, 0);
      ld_124 = TargetPrice(g_Magic2, 2, ld_52, 1, 0);
      ld_132 = TargetPrice(g_Magic2, 2, ld_52, 0, 1);
      ld_140 = TargetPrice(g_Magic2, 2, ld_52, 1, 1);
      if (MyAccountProfit(g_Magic2) + ClosedProfit(g_Magic2, g_ST2) >= ld_52) {
         Close1ZLProfit(g_Magic2, Silver, g_Slippage);
         g_TC2++;
         g_SP2 = 0;
         g_ST2 = 0;
         deleteline(2);
      }
      if (StopLoss_OpenPosNum > 0 && StopLoss_Distance > 0) {
         if (MyOrdersTotal(g_Magic2) > StopLoss_OpenPosNum && MathAbs(iClose(NULL, 0, 0) - ld_124) / g_Point < StopLoss_Distance || MathAbs(iClose(NULL, 0, 0) - ld_116) / g_Point < StopLoss_Distance) {
            Close1ZLProfit(g_Magic2, Silver, g_Slippage);
            g_TC2++;
            g_SP2 = 0;
            g_ST2 = 0;
            deleteline(2);
         }
      }
   }
   if (g_SP2 == 0.0 && Enable_C2 && (DayOfWeek() >= Start_Trading_Day && DayOfWeek() <= End_Trading_Day)) {
      if (Use_Keltner_Entry) {
         if ((g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) > g_MA_M30_ATR_H) || (g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) < g_MA_M30_ATR_L)) {
            if (CheckZL(g_Magic2, iClose(NULL, 0, 0))) {
               if (CalculateLotsTarget(g_Magic2)) {
                  g_SP2 = iClose(NULL, 0, 0);
                  g_ST2 = TimeCurrent();
               }
            }
         }
      } else {
         if (CheckZL(g_Magic2, iClose(NULL, 0, 0))) {
            if (CalculateLotsTarget(g_Magic2)) {
               g_SP2 = iClose(NULL, 0, 0);
               g_ST2 = TimeCurrent();
            }
         }
      }
   }
   if (g_SP2 != 0.0) {
      if (Enable_ASP_C2) MovingZeroLine(g_Magic2);
      if (g_Lot2 <= 0.01) FindLotSize(g_Magic2);
      DoPyramiding(g_Magic2);
      if (Enable_BRT_Pyramiding) Do_BRT_Pyramiding(g_Magic2);
      if (Enable_REV_Pyramiding) Do_REV_Pyramiding(g_Magic2);
      if (Enable_INV_Pyramiding) Do_INV_Pyramiding(g_Magic2);
      if (Enable_SCA_Pyramiding) Do_SCA_Pyramiding(g_Magic2);
      if (Force_MSP_Above && iClose(NULL, 0, 0) >= Force_MSP_LimitPrice && Force_MSP_CycleNum == 2) {
         if (g_EnableForceMSP2) {
            ForceMSPAbove(2);
            g_EnableForceMSP2 = false;
         }
      }
      if (Force_MSP_Below && iClose(NULL, 0, 0) <= Force_MSP_LimitPrice && Force_MSP_CycleNum == 2) {
         if (g_EnableForceMSP2) {
            ForceMSPBelow(2);
            g_EnableForceMSP2 = false;
         }
      }
      if (Force_CLOSE_Above && gi_1456 && iClose(NULL, 0, 0) >= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 2) {
         Close1ZLProfit(g_Magic2, Chocolate, g_Slippage);
         gi_1456 = false;
         deleteline(2);
         Force_CLOSE_Above = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
      if (Force_CLOSE_Below && gi_1456 && iClose(NULL, 0, 0) <= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 2) {
         Close1ZLProfit(g_Magic2, Chocolate, g_Slippage);
         gi_1456 = false;
         deleteline(2);
         Force_CLOSE_Below = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
   }
   if (g_SP3 != 0.0) {
      if (!g_MiniAccount) ld_60 = g_Lot3 * g_LotMulti;
      else ld_60 = g_Lot3 / 10.0 * g_LotMulti;
      ld_148 = TargetPrice(g_Magic3, 3, ld_60, 0, 0);
      ld_156 = TargetPrice(g_Magic3, 3, ld_60, 1, 0);
      ld_164 = TargetPrice(g_Magic3, 3, ld_60, 0, 1);
      ld_172 = TargetPrice(g_Magic3, 3, ld_60, 1, 1);
      if (MyAccountProfit(g_Magic3) + ClosedProfit(g_Magic3, g_ST3) >= ld_60) {
         while (MyOrdersTotal(g_Magic3) > 0) Close1ZLProfit(g_Magic3, Silver, g_Slippage);
         g_SP3 = 0;
         g_ST3 = 0;
      }
      ld_180 = (-StopLoss_Percentage) / 100.0 * g_AccountEquity;
      if (StopLoss_OpenPosNum > 0 && StopLoss_Distance > 0 && MyOrdersTotal(g_Magic3) > StopLoss_OpenPosNum) {
         if (MyAccountProfit(g_Magic3) + ClosedProfit(g_Magic3, g_ST3) >= ld_180 && MathAbs(iClose(NULL, 0, 0) - ld_156) / g_Point < StopLoss_Distance ||
            MathAbs(iClose(NULL, 0, 0) - ld_148) / g_Point < StopLoss_Distance) {
            while (MyOrdersTotal(g_Magic3) > 0) Close1ZLProfit(g_Magic3, Silver, g_Slippage);
            g_TC3++;
            g_SP3 = 0;
            g_ST3 = 0;
            deleteline(3);
         }
      }
   }
   if (g_SP3 == 0.0 && Enable_C3 && (DayOfWeek() >= Start_Trading_Day && DayOfWeek() <= End_Trading_Day)) {
      if (Use_Keltner_Entry) {
         if ((g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) > g_MA_M30_ATR_H) || (g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) < g_MA_M30_ATR_L)) {
            if (CheckZL(g_Magic3, iClose(NULL, 0, 0))) {
               if (CalculateLotsTarget(g_Magic3)) {
                  g_SP3 = iClose(NULL, 0, 0);
                  g_ST3 = TimeCurrent();
               }
            }
         }
      } else {
         if (CheckZL(g_Magic3, iClose(NULL, 0, 0))) {
            if (CalculateLotsTarget(g_Magic3)) {
               g_SP3 = iClose(NULL, 0, 0);
               g_ST3 = TimeCurrent();
            }
         }
      }
   }
   if (g_SP3 != 0.0) {
      if (Enable_ASP_C3) MovingZeroLine(g_Magic3);
      DoPyramiding(g_Magic3);
      if (Enable_BRT_Pyramiding) Do_BRT_Pyramiding(g_Magic3);
      if (Enable_REV_Pyramiding) Do_REV_Pyramiding(g_Magic3);
      if (Enable_INV_Pyramiding) Do_INV_Pyramiding(g_Magic3);
      if (Enable_SCA_Pyramiding) Do_SCA_Pyramiding(g_Magic3);
      if (Force_MSP_Above && iClose(NULL, 0, 0) >= Force_MSP_LimitPrice && Force_MSP_CycleNum == 3) {
         if (g_EnableForceMSP3) {
            ForceMSPAbove(3);
            g_EnableForceMSP3 = false;
         }
      }
      if (Force_MSP_Below && iClose(NULL, 0, 0) <= Force_MSP_LimitPrice && Force_MSP_CycleNum == 3) {
         if (g_EnableForceMSP3) {
            ForceMSPBelow(3);
            g_EnableForceMSP3 = false;
         }
      }
      if (Force_CLOSE_Above && gi_1460 && iClose(NULL, 0, 0) >= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 3) {
         Close1ZLProfit(g_Magic3, Chocolate, g_Slippage);
         gi_1460 = false;
         deleteline(3);
         Force_CLOSE_Above = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
      if (Force_CLOSE_Below && gi_1460 && iClose(NULL, 0, 0) <= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 3) {
         Close1ZLProfit(g_Magic3, Chocolate, g_Slippage);
         gi_1460 = false;
         deleteline(3);
         Force_CLOSE_Below = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
   }
   if (g_SP4 != 0.0) {
      if (!g_MiniAccount) ld_68 = g_Lot4 * g_LotMulti;
      else ld_68 = g_Lot4 / 10.0 * g_LotMulti;
      ld_188 = TargetPrice(g_Magic4, 4, ld_68, 0, 0);
      ld_196 = TargetPrice(g_Magic4, 4, ld_68, 1, 0);
      ld_204 = TargetPrice(g_Magic4, 4, ld_68, 0, 1);
      ld_212 = TargetPrice(g_Magic4, 4, ld_68, 1, 1);
      if (MyAccountProfit(g_Magic4) + ClosedProfit(g_Magic4, g_ST4) >= ld_68) {
         while (MyOrdersTotal(g_Magic4) > 0) Close1ZLProfit(g_Magic4, Silver, g_Slippage);
         g_TC4++;
         g_SP4 = 0;
         g_ST4 = 0;
         deleteline(4);
      }
      ld_220 = (-StopLoss_Percentage) / 100.0 * g_AccountEquity;
      if (StopLoss_OpenPosNum > 0 && StopLoss_Distance > 0 && MyOrdersTotal(g_Magic4) > StopLoss_OpenPosNum) {
         if (MyAccountProfit(g_Magic4) + ClosedProfit(g_Magic4, g_ST4) >= ld_220 && MathAbs(iClose(NULL, 0, 0) - ld_196) / g_Point < StopLoss_Distance ||
            MathAbs(iClose(NULL, 0, 0) - ld_188) / g_Point < StopLoss_Distance) {
            while (MyOrdersTotal(g_Magic4) > 0) Close1ZLProfit(g_Magic4, Silver, g_Slippage);
            g_TC4++;
            g_SP4 = 0;
            g_ST4 = 0;
            deleteline(4);
         }
      }
   }
   if (g_SP4 == 0.0 && Enable_C4 && (DayOfWeek() >= Start_Trading_Day && DayOfWeek() <= End_Trading_Day)) {
      if (Use_Keltner_Entry) {
         if ((g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) > g_MA_M30_ATR_H) || (g_IDX0 > g_IDX1 && iClose(NULL, 0, 0) < g_MA_M30_ATR_L)) {
            if (CheckZL(g_Magic4, iClose(NULL, 0, 0))) {
               if (CalculateLotsTarget(g_Magic4)) {
                  g_SP4 = iClose(NULL, 0, 0);
                  g_ST4 = TimeCurrent();
               }
            }
         }
      } else {
         if (CheckZL(g_Magic4, iClose(NULL, 0, 0))) {
            if (CalculateLotsTarget(g_Magic4)) {
               g_SP4 = iClose(NULL, 0, 0);
               g_ST4 = TimeCurrent();
            }
         }
      }
   }
   if (g_SP4 != 0.0) {
      if (Enable_ASP_C4) MovingZeroLine(g_Magic4);
      if (g_Lot4 <= 0.01) FindLotSize(g_Magic4);
      DoPyramiding(g_Magic4);
      if (Enable_BRT_Pyramiding) Do_BRT_Pyramiding(g_Magic4);
      if (Enable_REV_Pyramiding) Do_REV_Pyramiding(g_Magic4);
      if (Enable_INV_Pyramiding) Do_INV_Pyramiding(g_Magic4);
      if (Enable_SCA_Pyramiding) Do_SCA_Pyramiding(g_Magic4);
      if (Force_MSP_Above && iClose(NULL, 0, 0) >= Force_MSP_LimitPrice && Force_MSP_CycleNum == 4) {
         if (g_EnableForceMSP4) {
            ForceMSPAbove(4);
            g_EnableForceMSP4 = false;
         }
      }
      if (Force_MSP_Below && iClose(NULL, 0, 0) <= Force_MSP_LimitPrice && Force_MSP_CycleNum == 4) {
         if (g_EnableForceMSP4) {
            ForceMSPBelow(4);
            g_EnableForceMSP4 = false;
         }
      }
      if (Force_CLOSE_Above && gi_1464 && iClose(NULL, 0, 0) >= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 4) {
         Close1ZLProfit(g_Magic4, Chocolate, g_Slippage);
         gi_1464 = false;
         deleteline(4);
         Force_CLOSE_Above = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
      if (Force_CLOSE_Below && gi_1464 && iClose(NULL, 0, 0) <= Force_CLOSE_LimitPrice && Force_CLOSE_CycleNum == 4) {
         Close1ZLProfit(g_Magic4, Chocolate, g_Slippage);
         gi_1464 = false;
         deleteline(4);
         Force_CLOSE_Below = false;
         Force_CLOSE_LimitPrice = 0;
         Force_CLOSE_CycleNum = false;
      }
   }
   
   
   /*if (g_HU) ls_unused_228 = "true";
   else ls_unused_228 = "false";
   if (g_TL) ls_unused_236 = "true";
   else ls_unused_236 = "false";
   if (g_HL) ls_unused_244 = "true";
   else ls_unused_244 = "false";
   if (g_TU) ls_unused_252 = "true";
   else ls_unused_252 = "false";
   if (g_SP1 == 0.0) ls_260 = "Waiting NEW SP";
   else ls_260 = DateToStr(g_ST1);
   if (g_SP2 == 0.0) ls_268 = "Waiting NEW SP";
   else ls_268 = DateToStr(g_ST2);
   if (g_SP3 == 0.0) ls_276 = "Waiting NEW SP";
   else ls_276 = DateToStr(g_ST3);
   if (g_SP4 == 0.0) ls_284 = "Waiting NEW SP";
   else ls_284 = DateToStr(g_ST4);
   if (Enable_C1) ls_300 = "ACTIVE";
   else ls_300 = "Disable";
   if (Enable_C2) ls_308 = "ACTIVE";
   else ls_308 = "Disable";
   if (Enable_C3) ls_316 = "ACTIVE";
   else ls_316 = "Disable";
   if (Enable_C4) ls_324 = "ACTIVE";
   else ls_324 = "Disable";
   if (Enable_Watermark_Calc) ls_340 = "ACTIVE";
   else ls_340 = "Disable";
   if (Force_CLOSE_Above) ls_348 = "true";
   else ls_348 = "false";
   if (Force_CLOSE_Below) ls_356 = "true";
   else ls_356 = "false";
   if (gi_1452) ls_364 = "ENABLE";
   else ls_364 = "Disable";
   if (gi_1456) ls_372 = "ENABLE";
   else ls_372 = "Disable";
   if (gi_1460) ls_380 = "ENABLE";
   else ls_380 = "Disable";
   if (gi_1464) ls_388 = "ENABLE";
   else ls_388 = "Disable";
   if (Force_MSP_Above) ls_412 = "true";
   else ls_412 = "false";
   if (Force_MSP_Below) ls_420 = "true";
   else ls_420 = "false";
   if (Move_SP) ls_428 = "true";
   else ls_428 = "false";
   if (g_EnableForceMSP1) ls_436 = "ENABLE";
   else ls_436 = "Disable";
   if (g_EnableForceMSP2) ls_444 = "ENABLE";
   else ls_444 = "Disable";
   if (g_EnableForceMSP3) ls_452 = "ENABLE";
   else ls_452 = "Disable";
   if (g_EnableForceMSP4) ls_460 = "ENABLE";
   else ls_460 = "Disable";
   if (g_MiniAccount) ls_404 = "MINI Account";
   else
      if (!g_MiniAccount) ls_404 = "STANDARD Account";
   if (gi_264) ls_476 = "Authorization... ";
   else ls_476 = "ACTIVE";
   if (IsDemo()) ls_484 = "DEMO Account >> ";
   else ls_484 = "LIVE Account >> ";
   Comment("                           DREAMBUILDER-FX 814 (Build DEC 20,2008) - Copyright@2007-2008 Yohanes R. Gagahlin. http://www.ForexHope.com", 
      "\n                           YOUR DTS-1 STATUS: " + ls_484 + ls_476 + ls_20 
      + "\n                           C-Cycle Status = *LONG:" + Enabled(gi_300) + " / *SHORT:" + Enabled(gi_296) 
      + "\n                           B-Cycle Status = *LONG:" + Enabled(gi_308) + " / *SHORT:" + Enabled(gi_304) + " | Multiply Lot:" + DoubleToStr(Multiply_Lot_BRT, 1) 
      + "\n                           I-Cycle Status = *LONG:" + Enabled(gi_324) + " / *SHORT:" + Enabled(gi_320) + " | Multiply Lot:" + DoubleToStr(Multiply_Lot_INV, 1) 
      + "\n                           R-Cycle Status = *LONG:" + Enabled(gi_316) + " / *SHORT:" + Enabled(gi_312) + " | Multiply Lot:" + DoubleToStr(Multiply_Lot_REV, 1) 
      + "\n                           S-Cycle Status = *LONG:" + Enabled(gi_336) + " / *SHORT:" + Enabled(gi_332) + " | Multiply Lot:" + DoubleToStr(Multiply_Lot_SCA, 1) 
      + "\n                           Automatic MSP Status = *TREND:" + Enabled(Automatic_MSP_Trend;) + " / *REVERSAL:" + Enabled(Automatic_MSP_Reversal) 
      + "\n                           RISK SETTING: " + Risk_Setting + " (" + gi_1652 + ") " + "| SP Distance: " + SP_Distance + " | Enable Watermark Calculation: " + ls_340 + " | Account: " + ls_404 + " | DayOfWeek: " + DayOfWeek() 
      + "\n\n                           TOTAL CLOSE PROFIT PERFORMANCE (C1/C2/C3/C4/SIMULTANEOUS CLOSE): " + g_TC1 + "+" + g_TC2 + "+" + g_TC3 + "+" + g_TC4 + "+" + gi_1392 + "=" + ((g_TC1 + g_TC2 + g_TC3 + g_TC4 + gi_1392)), 
      "\n                           LAST MSP PROCESS: " + gs_1412, 
      "\n\n                           LAST EQUITY WATERMARK: " + DoubleToStr(g_AccountEquity, 2) + " | ACCOUNT EQUITY: " + DoubleToStr(AccountEquity(), 2) 
      + "\n                           TOTAL FLOATING +/-: ", DoubleToStr(AccountProfit(), 2) + " | TOTAL OPEN POSITION (C1-C4): " + OrdersTotal() 
      + "\n                           CURRENT DRAWDOWN/PROFIT SINCE LAST EQUITY WATERMARK: " + DoubleToStr(AccountEquity() - g_AccountEquity, 2), 
      "\n\n                           RUNNING CLOSED PROFIT (C1/C2/C3/C4): " + DoubleToStr(ClosedProfit(g_Magic1, GlobalVariableGet(g_var_name_1088)), 2) + " / " + DoubleToStr(ClosedProfit(g_Magic2, GlobalVariableGet(g_var_name_1136)), 2) + " / " + DoubleToStr(ClosedProfit(g_Magic3, GlobalVariableGet(g_var_name_1184)), 2) + " / " + DoubleToStr(ClosedProfit(g_Magic4, GlobalVariableGet(g_var_name_1232)), 2) 
      + "\n                           ------------------------------------" 
      + "\n                           C1 (" + ls_300 + ") | FLOATING +/- (TARGET): " + DoubleToStr(MyAccountProfit(g_Magic1), 2) + " (" + DoubleToStr(ld_516, 2) + ") | Target: " + DoubleToStr(ld_76, 4) + "/" + DoubleToStr(ld_84, 4) 
      + "\n                           C2 (" + ls_308 + ") | FLOATING +/- (TARGET): " + DoubleToStr(MyAccountProfit(g_Magic2), 2) + " (" + DoubleToStr(ld_52, 2) + ") | Target: " + DoubleToStr(ld_116, 4) + "/" + DoubleToStr(ld_124, 4) 
      + "\n                           C3 (" + ls_316 + ") | FLOATING +/- (TARGET): " + DoubleToStr(MyAccountProfit(g_Magic3), 2) + " (" + DoubleToStr(ld_60, 2) + ") | Target: " + DoubleToStr(ld_148, 4) + "/" + DoubleToStr(ld_156, 4) 
      + "\n                           C4 (" + ls_324 + ") | FLOATING +/- (TARGET): " + DoubleToStr(MyAccountProfit(g_Magic4), 2) + " (" + DoubleToStr(ld_68, 2) + ") | Target: " + DoubleToStr(ld_188, 4) + "/" + DoubleToStr(ld_196, 4) 
      + "\n\n                           C1 (LOT-SIZE): " + DoubleToStr(g_Lot1, 2) + " | SP: " + DoubleToStr(g_SP1, 4) + " (" + ls_260 + ") | OPEN POS: " + MyOrdersTotal(g_Magic1) + " | B:S = " + BSOrdersTotal(g_Magic1, 0) + ":" + BSOrdersTotal(g_Magic1, 1) 
      + "\n                           C2 (LOT-SIZE): " + DoubleToStr(g_Lot2, 2) + " | SP: " + DoubleToStr(g_SP2, 4) + " (" + ls_268 + ") | OPEN POS: " + MyOrdersTotal(g_Magic2) + " | B:S = " + BSOrdersTotal(g_Magic2, 0) + ":" + BSOrdersTotal(g_Magic2, 1) 
      + "\n                           C3 (LOT-SIZE): " + DoubleToStr(g_Lot3, 2) + " | SP: " + DoubleToStr(g_SP3, 4) + " (" + ls_276 + ") | OPEN POS: " + MyOrdersTotal(g_Magic3) + " | B:S = " + BSOrdersTotal(g_Magic3, 0) + ":" + BSOrdersTotal(g_Magic3, 1) 
      + "\n                           C4 (LOT-SIZE): " + DoubleToStr(g_Lot4, 2) + " | SP: " + DoubleToStr(g_SP4, 4) + " (" + ls_284 + ") | OPEN POS: " + MyOrdersTotal(g_Magic4) + " | B:S = " + BSOrdersTotal(g_Magic4, 0) + ":" + BSOrdersTotal(g_Magic4, 1) 
      + "\n                           ------------------------------------" 
      + "\n                           FORCE CLOSE STATUS (Above/Below/Cycle.Num) | LMT.PRICE (iClose) : " + ls_348 + " / " + ls_356 + " / " + Force_CLOSE_CycleNum + " | ", DoubleToStr(Force_CLOSE_LimitPrice, 4) + " (" + DoubleToStr(iClose(NULL, 0, 0), 4) + ") " 
      + "\n                           ENABLE FORCE CLOSE (C1-C4): " + ls_364 + " / " + ls_372 + " / ", ls_380 + " / " + ls_388, 
      "\n\n                           FORCE MSP STATUS (Above/Below/Cycle.Num/MoveSP) | TOP/BOT PRICE | LMT.PRICE (iClose) : " + ls_412 + " / " + ls_420 + " / " + Force_MSP_CycleNum + " / " + ls_428 + " | " + DoubleToStr(Force_MSP_TopPrice, 4) + "/" + DoubleToStr(Force_MSP_BottomPrice, 4) + " | " + DoubleToStr(Force_MSP_LimitPrice, 4) + " (" + DoubleToStr(iClose(NULL, 0, 0), 4) + ") " 
      + "\n                           ENABLE FORCE MSP (C1-C4): " + ls_436 + " / " + ls_444 + " / ", ls_452 + " / " + ls_460 
      + "\n                           ------------------------------------" 
      + "\n                           Par1: " + Param1 + " | Par2: " + Param2 + " | Par3: " + Param3 + " | Par4: " + Param4 + " | Par5: " + gi_328 + " | Par6: " + Param6 + " |" 
   + "\n\n                           橡铞屙?筲咫梓屙? 镳铘栩?鲨觌? " + Prt_Up_Profit + "%");*/
   return (0);
}

